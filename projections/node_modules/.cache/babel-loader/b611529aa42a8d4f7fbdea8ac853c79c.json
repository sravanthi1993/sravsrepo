{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\SravsGithub\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\Holidays.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { TextField, PrimaryButton, ChoiceGroup, Stack, IStackTokens, DetailsList } from 'office-ui-fabric-react';\nimport { DatePicker, DayOfWeek, IDatePickerStrings, mergeStyleSets } from 'office-ui-fabric-react';\nimport { DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\n\nconst Holidays = () => {\n  _s();\n\n  const [state, setState] = useState({\n    HolDate: new Date(),\n    Occasion: \"\"\n  });\n\n  function setHolDate(date) {\n    setState(prevstate => {\n      return { ...prevstate,\n        \"HolDate\": date\n      };\n    });\n  }\n\n  function setProperty(e) {\n    var name = e.target.name;\n    var val = e.target.value;\n    console.log(name + \"--\" + val);\n    setState(prevstate => {\n      return { ...prevstate,\n        [name]: val\n      };\n    });\n  }\n\n  const [Holidaysdetails, setHolidaysdetails] = useState([]); //var listofholidays = []\n\n  useEffect(() => {\n    const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\";\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(holidays => {\n      console.log(holidays);\n      /*holidays.map(holiday =>  \r\n        {\r\n            listofholidays.push(new Date(Date.parse(holiday.holidayDate)))\r\n        });*/\n      //console.log(listofholidays)\n\n      setHolidaysdetails(holidays);\n    });\n  });\n\n  function getholidayslist() {\n    const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\";\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(holidays => {\n      console.log(holidays);\n      /*holidays.map(holiday =>  \r\n        {\r\n            listofholidays.push(new Date(Date.parse(holiday.holidayDate)))\r\n        });*/\n      //console.log(listofholidays)\n\n      setHolidaysdetails(holidays);\n    });\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    console.log(state.HolDate + \" ---- \" + state.Occasion); //const url = \"https://projectionsazurefunctions.azurewebsites.net/api/AddProject?code=aRwmurbZKy0napFo3BPImB79fgC3Hx5Ejk4FZGPmUuNWbR2bZIbdZg==\";\n\n    const url = \"http://localhost:7071/api/Holidays\";\n    fetch(url, {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        \"HolidayDate\": state.HolDate,\n        \"Occasion\": state.Occasion\n      })\n    }).then(response => {\n      setState({\n        indicatorText: \"Added Holidays\"\n      });\n      getholidayslist();\n    }).catch(err => {\n      setState({\n        indicatorText: \"Ran into an error while adding project \" + err\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"Label\",\n          children: \" Enter Holidays\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          className: \"field\",\n          label: \"Pick Holidays\",\n          placeholder: \"Select a date...\",\n          name: \"HolDate\",\n          value: state.HolDate,\n          onSelectDate: setHolDate,\n          ariaLabel: \"Select a date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"field\",\n          label: \"Name of Occasion\",\n          name: \"Occasion\",\n          value: state.Occasion,\n          onChange: setProperty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n          items: Holidaysdetails,\n          setKey: \"set\",\n          layoutMode: DetailsListLayoutMode.justified,\n          selectionMode: SelectionMode.none\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          className: \"Add\",\n          text: \"Add Holidays\",\n          onClick: onSubmit,\n          allowDisabledFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Holidays, \"O8E36W2YxoWGT17n2zGCr85kCco=\");\n\n_c = Holidays;\nexport default Holidays;\n\nvar _c;\n\n$RefreshReg$(_c, \"Holidays\");","map":{"version":3,"sources":["C:/SravsGithub/sravsrepo/projections/src/Components/Holidays.js"],"names":["React","useState","useEffect","Label","TextField","PrimaryButton","ChoiceGroup","Stack","IStackTokens","DetailsList","DatePicker","DayOfWeek","IDatePickerStrings","mergeStyleSets","DetailsListLayoutMode","SelectionMode","Selection","IColumn","Holidays","state","setState","HolDate","Date","Occasion","setHolDate","date","prevstate","setProperty","e","name","target","val","value","console","log","Holidaysdetails","setHolidaysdetails","url","fetch","method","then","response","json","holidays","getholidayslist","onSubmit","preventDefault","mode","headers","body","JSON","stringify","indicatorText","catch","err","justified","none"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { TextField, PrimaryButton, ChoiceGroup, Stack, IStackTokens, DetailsList } from 'office-ui-fabric-react';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings, mergeStyleSets } from 'office-ui-fabric-react';\r\nimport {DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\nconst Holidays = () => {\r\n    const[state,setState] = useState ({\r\n        HolDate : new Date(),\r\n        Occasion : \"\"\r\n    });\r\n\r\n\r\n    function setHolDate(date){\r\n        setState(prevstate => {\r\n            return {...prevstate, \"HolDate\":  date };\r\n        });\r\n    }\r\n\r\n    function setProperty(e) {\r\n        var name  = e.target.name;\r\n        var val = e.target.value ;\r\n\r\n        console.log(name + \"--\" + val)\r\n                setState(prevstate => {\r\n                    return {...prevstate, [name]: val};\r\n                });\r\n    }\r\n\r\n    const [Holidaysdetails, setHolidaysdetails ] = useState([]);\r\n    //var listofholidays = []\r\n    \r\n    useEffect(() => {\r\n    \r\n    \r\n    const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\"\r\n        fetch(url, {\r\n            method : \"GET\"\r\n          }).then(response => response.json()\r\n          ).then(holidays => {\r\n              console.log(holidays);\r\n              /*holidays.map(holiday =>  \r\n                {\r\n                    listofholidays.push(new Date(Date.parse(holiday.holidayDate)))\r\n                });*/\r\n              //console.log(listofholidays)\r\n              setHolidaysdetails(holidays);\r\n            })\r\n        });\r\n\r\n        function getholidayslist(){\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\"\r\n        fetch(url, {\r\n            method : \"GET\"\r\n          }).then(response => response.json()\r\n          ).then(holidays => {\r\n              console.log(holidays);\r\n              /*holidays.map(holiday =>  \r\n                {\r\n                    listofholidays.push(new Date(Date.parse(holiday.holidayDate)))\r\n                });*/\r\n              //console.log(listofholidays)\r\n              setHolidaysdetails(holidays);\r\n            })\r\n        }\r\n    \r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(state.HolDate + \" ---- \"+ state.Occasion);\r\n        //const url = \"https://projectionsazurefunctions.azurewebsites.net/api/AddProject?code=aRwmurbZKy0napFo3BPImB79fgC3Hx5Ejk4FZGPmUuNWbR2bZIbdZg==\";\r\n        const url = \"http://localhost:7071/api/Holidays\";\r\n        fetch(url, {\r\n              method : \"POST\",\r\n              mode: \"no-cors\",\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n                  // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n              body:  JSON.stringify({\r\n                  \r\n                  \"HolidayDate\": state.HolDate,\r\n                  \"Occasion\" : state.Occasion,\r\n                  \r\n              })\r\n          }).then(response => {\r\n              setState({indicatorText: \"Added Holidays\"});\r\n              getholidayslist();\r\n          }).catch(err => {setState({indicatorText: \"Ran into an error while adding project \" + err})});\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={onSubmit} >\r\n        <React.Fragment>\r\n        <Label className=\"Label\"> Enter Holidays</Label>\r\n        \r\n        <DatePicker className=\"field\" label=\"Pick Holidays\" placeholder=\"Select a date...\" name=\"HolDate\" value={state.HolDate} onSelectDate={setHolDate} ariaLabel=\"Select a date\"/>\r\n        <TextField className=\"field\" label=\"Name of Occasion\" name=\"Occasion\" value={state.Occasion} onChange={setProperty}/>\r\n        <DetailsList \r\n                        items={Holidaysdetails}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selectionMode={SelectionMode.none}\r\n        /> \r\n        <PrimaryButton className=\"Add\" text=\"Add Holidays\" onClick={onSubmit} allowDisabledFocus />\r\n        </React.Fragment>\r\n            </form>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Holidays;"]},"metadata":{},"sourceType":"module"}