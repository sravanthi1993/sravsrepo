{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\SravsGithub\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\n\nfunction Projects(props) {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [state, setState] = useState({\n    projectID: \"\",\n    projectName: \"\",\n    description: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n    resources: [],\n    shouldShowProjections: false,\n    totalBill: 0,\n    poStatus: \"active\",\n    poValue: \"\",\n    poNum: \"\",\n    origPoNum: \"\",\n    poType: \"sow\",\n    projType: \"t&m\",\n    salesSegment: \"\",\n    cluster: \"\",\n    clientPartner: \"\",\n    accountManager: \"\",\n    cdmName: \"\"\n  });\n  const [projDetailsVisible, setprojlist] = useState([]);\n\n  function setCurrentProject(e) {\n    var project = props.projectlist[e.target.name];\n    setState(prevstate => {\n      return { ...prevstate,\n        shouldShowProjections: false,\n        projectName: project.projectName,\n        startDate: new Date(Date.parse(project.startDate)),\n        endDate: new Date(Date.parse(project.endDate)),\n        description: project.description,\n        resources: project.resources,\n        poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\n        poValue: project.poValue,\n        poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\n        projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\n        poNum: project.poNumber,\n        origPoNum: project.orginalPoNumber,\n        salesSegment: project.salesSegment,\n        cluster: project.cluster,\n        clientPartner: project.clientPartner,\n        accountManager: project.accountManager,\n        cdmName: project.cdmName,\n        projDetailsVisible: true\n      };\n    });\n  }\n\n  function UpdateItems() {\n    setItems([{\n      \"Field\": \"PO Number\",\n      \"Value\": state.poNum\n    }, {\n      \"Field\": \"Name\",\n      \"Value\": state.projectName\n    }, {\n      \"Field\": \"Description\",\n      \"Value\": state.description\n    }, {\n      \"Field\": \"Start Date\",\n      \"Value\": state.startDate.toString()\n    }, {\n      \"Field\": \"End Date\",\n      \"Value\": state.endDate.toString()\n    }, {\n      \"Field\": \"Original PO Number\",\n      \"Value\": state.origPoNum\n    }, {\n      \"Field\": \"PO Current Status\",\n      \"Value\": state.poStatus\n    }, {\n      \"Field\": \"PO Value\",\n      \"Value\": state.poValue\n    }, {\n      \"Field\": \"PO Type\",\n      \"Value\": state.poType\n    }, {\n      \"Field\": \"Project Type\",\n      \"Value\": state.projType\n    }, {\n      \"Field\": \"Sales Segment\",\n      \"Value\": state.salesSegment\n    }, {\n      \"Field\": \"Cluster \",\n      \"Value\": state.cluster\n    }, {\n      \"Field\": \"Client Partner(L1)\",\n      \"Value\": state.clientPartner\n    }, {\n      \"Field\": \"Account Manager(L2)\",\n      \"Value\": state.accountManager\n    }, {\n      \"Field\": \"CDM Name\",\n      \"Value\": state.cdmName\n    }]);\n  }\n\n  React.useEffect(() => {\n    UpdateItems();\n  }, [state]); //setprojlist(props.projectlist);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ProjectsList\",\n      children: \" Projects List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), props.projectlist.map((proj, index) => {\n      console.log(proj.projectName);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: setCurrentProject,\n          name: index,\n          children: [proj.projectName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 104\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(DetailsList, {\n      items: items,\n      setKey: \"set\",\n      layoutMode: DetailsListLayoutMode.justified,\n      selectionMode: SelectionMode.none\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Projects, \"E+pqlfTk9ro2HjkQITs2d5ilXOE=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/SravsGithub/sravsrepo/projections/src/Components/Projects.js"],"names":["React","useState","Label","Link","PrimaryButton","List","DetailsList","DetailsListLayoutMode","SelectionMode","Selection","IColumn","Projects","props","items","setItems","state","setState","projectID","projectName","description","startDate","Date","endDate","resources","shouldShowProjections","totalBill","poStatus","poValue","poNum","origPoNum","poType","projType","salesSegment","cluster","clientPartner","accountManager","cdmName","projDetailsVisible","setprojlist","setCurrentProject","e","project","projectlist","target","name","prevstate","parse","projectType","poNumber","orginalPoNumber","UpdateItems","toString","useEffect","map","proj","index","console","log","justified","none"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\r\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\n\r\n\r\nfunction Projects(props)  {\r\n    \r\n    const [items, setItems] = useState([]);\r\nconst [state, setState] = useState({\r\n    projectID: \"\",\r\n    projectName : \"\",\r\n    description : \"\",\r\n    startDate : new Date(),\r\n    endDate : new Date(),\r\n    resources: [],\r\n    shouldShowProjections: false,\r\n    totalBill: 0,\r\n    poStatus:\"active\",\r\n    poValue: \"\",\r\n    poNum: \"\",\r\n    origPoNum: \"\",\r\n    poType: \"sow\",\r\n    projType: \"t&m\",\r\n    salesSegment: \"\",\r\n    cluster: \"\",\r\n    clientPartner: \"\",\r\n    accountManager: \"\",\r\n    cdmName: \"\"\r\n  });\r\n\r\nconst [projDetailsVisible, setprojlist] = useState([]);\r\n\r\n\r\nfunction setCurrentProject(e) {\r\n    \r\n    var project = props.projectlist[e.target.name]\r\n    setState(prevstate =>\r\n        {return{...prevstate,\r\n          shouldShowProjections: false,\r\n          projectName: project.projectName,\r\n          startDate: new Date(Date.parse(project.startDate)),\r\n          endDate: new Date(Date.parse(project.endDate)),\r\n          description: project.description,\r\n          resources: project.resources,\r\n          poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n          poValue: project.poValue,\r\n          poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n          projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n          poNum: project.poNumber,\r\n          origPoNum: project.orginalPoNumber,\r\n          salesSegment: project.salesSegment,\r\n          cluster: project.cluster,\r\n          clientPartner: project.clientPartner,\r\n          accountManager: project.accountManager,\r\n          cdmName: project.cdmName,\r\n          projDetailsVisible: true\r\n        }\r\n        }\r\n    );\r\n}\r\n\r\n\r\nfunction UpdateItems()\r\n{\r\n    setItems( [\r\n        {\r\n            \"Field\": \"PO Number\",\r\n            \"Value\": state.poNum\r\n        },\r\n        {\r\n            \"Field\": \"Name\",\r\n            \"Value\": state.projectName\r\n        }, {\r\n            \"Field\": \"Description\",\r\n            \"Value\": state.description\r\n        }, {\r\n            \"Field\": \"Start Date\",\r\n            \"Value\": state.startDate.toString()\r\n        }, {\r\n            \"Field\": \"End Date\",\r\n            \"Value\": state.endDate.toString()\r\n        }, {\r\n            \"Field\": \"Original PO Number\",\r\n            \"Value\": state.origPoNum\r\n        }, {\r\n            \"Field\": \"PO Current Status\",\r\n            \"Value\": state.poStatus\r\n        }, {\r\n            \"Field\": \"PO Value\",\r\n            \"Value\": state.poValue\r\n        }, {\r\n            \"Field\": \"PO Type\",\r\n            \"Value\": state.poType\r\n        }, {\r\n            \"Field\": \"Project Type\",\r\n            \"Value\": state.projType\r\n        }, {\r\n            \"Field\": \"Sales Segment\",\r\n            \"Value\": state.salesSegment\r\n        }, {\r\n            \"Field\": \"Cluster \",\r\n            \"Value\": state.cluster\r\n        }, {\r\n            \"Field\": \"Client Partner(L1)\",\r\n            \"Value\": state.clientPartner\r\n        }, {\r\n            \"Field\": \"Account Manager(L2)\",\r\n            \"Value\": state.accountManager\r\n        }, {\r\n            \"Field\": \"CDM Name\",\r\n            \"Value\": state.cdmName\r\n        }\r\n    ]);\r\n}\r\n  \r\nReact.useEffect(() => {\r\n    UpdateItems();\r\n  }, [state]);\r\n\r\n    //setprojlist(props.projectlist);\r\n    return (<div>\r\n        <h1 className = \"ProjectsList\"> Projects List </h1>\r\n        {\r\n            props.projectlist.map((proj , index)=> {\r\n                console.log(proj.projectName);\r\n                return <div><Link onClick={setCurrentProject} name= {index}>{proj.projectName} </Link> <br/></div>\r\n            })\r\n        }\r\n        \r\n\r\n        <DetailsList\r\n                        items={items}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selectionMode={SelectionMode.none}\r\n                    /> <br/>\r\n                    </div>);\r\n\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}