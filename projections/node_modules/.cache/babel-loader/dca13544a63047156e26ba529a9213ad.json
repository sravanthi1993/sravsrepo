{"ast":null,"code":"// authProvider.js\nimport { MsalAuthProvider, LoginType } from 'react-aad-msal'; // Msal Configurations\n\nconst config = {\n  auth: {\n    authority: 'https://login.microsoftonline.com/99b5d273-16d0-460f-8d7a-fa3cadd3913a',\n    clientId: '206bba76-b352-41ba-b626-03764638d5fb',\n    redirectUri: 'http://localhost:3000',\n    postLogoutRedirectUri: window.location.origin,\n    redirectUri: window.location.origin,\n    validateAuthority: true,\n    // After being redirected to the \"redirectUri\" page, should user\n    // be redirected back to the Url where their login originated from?\n    navigateToLoginRequestUrl: true\n  },\n  cache: {\n    cacheLocation: \"localStorage\",\n    storeAuthStateInCookie: true\n  }\n}; // Authentication Parameters\n\nconst authenticationParameters = {\n  scopes: ['206bba76-b352-41ba-b626-03764638d5fb/.default', 'user.read']\n}; // Options\n\nconst options = {\n  loginType: LoginType.Popup,\n  tokenRefreshUri: window.location.origin\n};\nexport const authProvider = new MsalAuthProvider(config, authenticationParameters, options);","map":{"version":3,"sources":["C:/SravsGithub/sravsrepo/projections/src/AuthProvider.js"],"names":["MsalAuthProvider","LoginType","config","auth","authority","clientId","redirectUri","postLogoutRedirectUri","window","location","origin","validateAuthority","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","authenticationParameters","scopes","options","loginType","Popup","tokenRefreshUri","authProvider"],"mappings":"AAAA;AACA,SAASA,gBAAT,EAA2BC,SAA3B,QAA4C,gBAA5C,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,wEADP;AAEJC,IAAAA,QAAQ,EAAE,sCAFN;AAGJC,IAAAA,WAAW,EAAE,uBAHT;AAIJC,IAAAA,qBAAqB,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAJnC;AAKJJ,IAAAA,WAAW,EAAEE,MAAM,CAACC,QAAP,CAAgBC,MALzB;AAMJC,IAAAA,iBAAiB,EAAE,IANf;AAOJ;AACA;AACAC,IAAAA,yBAAyB,EAAE;AATvB,GADO;AAYbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE,cADV;AAELC,IAAAA,sBAAsB,EAAE;AAFnB;AAZM,CAAf,C,CAkBA;;AACA,MAAMC,wBAAwB,GAAG;AAC/BC,EAAAA,MAAM,EAAE,CACN,+CADM,EAEN,WAFM;AADuB,CAAjC,C,CAOA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAElB,SAAS,CAACmB,KADP;AAEdC,EAAAA,eAAe,EAAEb,MAAM,CAACC,QAAP,CAAgBC;AAFnB,CAAhB;AAKA,OAAO,MAAMY,YAAY,GAAG,IAAItB,gBAAJ,CAAqBE,MAArB,EAA6Bc,wBAA7B,EAAuDE,OAAvD,CAArB","sourcesContent":["// authProvider.js\r\nimport { MsalAuthProvider, LoginType } from 'react-aad-msal';\r\n \r\n// Msal Configurations\r\nconst config = {\r\n  auth: {\r\n    authority: 'https://login.microsoftonline.com/99b5d273-16d0-460f-8d7a-fa3cadd3913a',\r\n    clientId: '206bba76-b352-41ba-b626-03764638d5fb',\r\n    redirectUri: 'http://localhost:3000',\r\n    postLogoutRedirectUri: window.location.origin,\r\n    redirectUri: window.location.origin,\r\n    validateAuthority: true,\r\n    // After being redirected to the \"redirectUri\" page, should user\r\n    // be redirected back to the Url where their login originated from?\r\n    navigateToLoginRequestUrl: true\r\n  },\r\n  cache: {\r\n    cacheLocation: \"localStorage\",\r\n    storeAuthStateInCookie: true\r\n  }\r\n};\r\n \r\n// Authentication Parameters\r\nconst authenticationParameters = {\r\n  scopes: [\r\n    '206bba76-b352-41ba-b626-03764638d5fb/.default',\r\n    'user.read'\r\n  ]\r\n}\r\n \r\n// Options\r\nconst options = {\r\n  loginType: LoginType.Popup,\r\n  tokenRefreshUri: window.location.origin\r\n}\r\n \r\nexport const authProvider = new MsalAuthProvider(config, authenticationParameters, options)"]},"metadata":{},"sourceType":"module"}