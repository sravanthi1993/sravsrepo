[{"C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\index.js":"1","C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\App.js":"2","C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\reportWebVitals.js":"3","C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\Components\\AddResource.js":"4","C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\Components\\AddProject.js":"5","C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\Components\\Search.js":"6"},{"size":500,"mtime":1611585464124,"results":"7","hashOfConfig":"8"},{"size":1154,"mtime":1610497720023,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2776,"mtime":1611697891986,"results":"11","hashOfConfig":"8"},{"size":3654,"mtime":1612159978666,"results":"12","hashOfConfig":"8"},{"size":6663,"mtime":1611688314288,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f5w94e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\index.js",[],["28","29"],"C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\App.js",[],"C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\reportWebVitals.js",[],"C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\Components\\AddResource.js",[],"C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\Components\\AddProject.js",["30","31","32","33","34","35"],"C:\\Users\\samanchi\\Desktop\\React\\projections\\src\\Components\\Search.js",["36","37","38","39"],"import React from 'react';\r\nimport './Search.css';\r\nimport { If, Else, Elif } from 'rc-if-else';\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\nclass Search extends React.Component{\r\n\r\n    state = {\r\n        searchString: \"\",\r\n        projectID: \"\",\r\n        projectName : \"\",\r\n        description : \"\",\r\n        startDate : new Date(),\r\n        endDate : new Date(),\r\n        projDetailsVisible: false,\r\n        resources: [],\r\n        projNotFound: false,\r\n        shouldShowProjections: false,\r\n        totalBill: 0\r\n    }\r\n\r\n    setProperty = (e) => this.setState({ [e.target.name] : e.target.value });\r\n\r\n    onSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\"+this.state.searchString;\r\n        //const url = \"http://localhost:7071/api/AddProject\";\r\n        fetch(url, {\r\n              method : \"GET\",\r\n            }).then(response => response.json()\r\n            ).then(project => {\r\n                if(project.projectID != null)\r\n                {\r\n                this.setState(\r\n                    {\r\n                      projNotFound: false,\r\n                      projDetailsVisible: true,\r\n                      shouldShowProjections: false,\r\n                      projectID: project.projectID,\r\n                      projectName: project.projectName,\r\n                      startDate: new Date(Date.parse(project.startDate)),\r\n                      endDate: new Date(Date.parse(project.endDate)),\r\n                      description: project.description,\r\n                      resources: project.resources\r\n                    }\r\n                );\r\n                }\r\n                else{\r\n                    this.setState(\r\n                        {\r\n                            projNotFound: true,\r\n                            projDetailsVisible: false,\r\n                            shouldShowProjections: false\r\n                        })\r\n                }\r\n\r\n            }).catch(err => {alert(err)});\r\n      }\r\n      \r\n      showProjections = () => {\r\n          var billing = 0\r\n        this.state.resources.map(res =>{\r\n            billing +=res.billing;   \r\n        } )   \r\n        var a = this.state.startDate;\r\n        var b = this.state.endDate;\r\n        const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n        const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n        var diffdays = Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n        billing *= diffdays  \r\n        this.setState({\r\n            totalBill : billing,\r\n            shouldShowProjections: true\r\n        })\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"SearchSection\">\r\n                <form onSubmit={this.onSubmit} >\r\n                <h1 >Search for the Project ID</h1>\r\n                <table>\r\n                    <tr>\r\n                        <th><label >Project ID</label></th>\r\n                        <th><input type=\"text\" id=\"ProjectID\" name=\"searchString\" value = {this.state.searchString} onChange={this.setProperty}/></th>\r\n                    </tr>\r\n                </table><br/>\r\n                <button id=\"search\">Search</button>\r\n                </form> <br/>\r\n                <If condition={this.state.projNotFound}>\r\n                    <h3> Project not found! </h3>\r\n                </If>\r\n                <If condition={this.state.projDetailsVisible}>\r\n                <h2 className = \"projdetailheader\"> Project Details </h2>\r\n                <table className=\"projdetails\">\r\n                    <tr className=\"projfield\"> \r\n                        <th><label >Project ID</label></th>\r\n                        <th><label>{this.state.projectID}</label></th>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <th><label>Project Name</label></th>\r\n                        <th><label>{this.state.projectName}</label></th>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <th><label>Description</label></th>\r\n                        <th><label>{this.state.description}</label></th>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <th><label>Start Date</label></th>\r\n                        <th><label>{this.state.startDate.toString()}</label></th>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <th><label>End Date</label></th>\r\n                        <th><label>{this.state.endDate.toString()}</label></th>\r\n                    </tr>\r\n                    <br/>\r\n                    <If condition={this.state.resources.length > 0}>\r\n                    <h3> Resources </h3>\r\n                    <ul className=\"projfield\">\r\n                    { this.state.resources.map(res =>\r\n                        <li className=\"projfield\">{res.resourceName}</li>)\r\n                    }\r\n                    </ul>\r\n                    \r\n                    </If>\r\n                    <If condition={this.state.resources.length == 0}>\r\n                    <h3> No resources assigned to the project as of now. </h3>\r\n                    </If>\r\n                </table>\r\n                </If>\r\n                <If condition={this.state.resources.length > 0}>\r\n                 <button id=\"Projections\" onClick={this.showProjections}>Show Projection</button>\r\n                </If>\r\n                <If condition={this.state.shouldShowProjections} >\r\n                    <table className=\"BillingTable\">\r\n                        <tr>\r\n                            <th> Resource Name</th>\r\n                            <th> Bill (/day) </th>\r\n                            <th> Bill for the project duration</th>\r\n                        </tr>\r\n                        { this.state.resources.map(res =>\r\n                        <tr>\r\n                            <th className=\"resentry\"> {res.resourceName} </th>\r\n                            <th className=\"resentry\"> ${res.billing} </th>\r\n                            <th className=\"resentry\"> ${res.billing * ((this.state.endDate - this.state.startDate)/_MS_PER_DAY)}</th>\r\n                        </tr>)}\r\n                        <br/>\r\n                        <tr>\r\n                            <th> Total</th>\r\n                            <th>  - </th>\r\n                            <th> ${this.state.totalBill} </th>\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                </If>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":26,"nodeType":"46","messageId":"47","endLine":1,"endColumn":35},{"ruleId":"44","severity":1,"message":"48","line":4,"column":36,"nodeType":"46","messageId":"47","endLine":4,"endColumn":41},{"ruleId":"44","severity":1,"message":"49","line":4,"column":43,"nodeType":"46","messageId":"47","endLine":4,"endColumn":55},{"ruleId":"44","severity":1,"message":"50","line":5,"column":22,"nodeType":"46","messageId":"47","endLine":5,"endColumn":31},{"ruleId":"44","severity":1,"message":"51","line":5,"column":33,"nodeType":"46","messageId":"47","endLine":5,"endColumn":51},{"ruleId":"44","severity":1,"message":"52","line":5,"column":53,"nodeType":"46","messageId":"47","endLine":5,"endColumn":67},{"ruleId":"44","severity":1,"message":"53","line":3,"column":14,"nodeType":"46","messageId":"47","endLine":3,"endColumn":18},{"ruleId":"44","severity":1,"message":"54","line":3,"column":20,"nodeType":"46","messageId":"47","endLine":3,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":62,"column":38,"nodeType":"57","messageId":"58","endLine":62,"endColumn":40},{"ruleId":"59","severity":1,"message":"60","line":126,"column":64,"nodeType":"61","messageId":"62","endLine":126,"endColumn":66},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Stack' is defined but never used.","'IStackTokens' is defined but never used.","'DayOfWeek' is defined but never used.","'IDatePickerStrings' is defined but never used.","'mergeStyleSets' is defined but never used.","'Else' is defined but never used.","'Elif' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]