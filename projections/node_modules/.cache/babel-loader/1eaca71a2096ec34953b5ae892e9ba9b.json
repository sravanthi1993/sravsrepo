{"ast":null,"code":"import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport React from 'react';\n/**\n * clone elements child\n * @param {Object} props\n * @returns {ReactElement} child with props\n */\n\nvar cloneChildrenWithProps = function cloneChildrenWithProps(children, props) {\n  var condition = props.condition,\n      withinIf = props.withinIf,\n      newProps = _objectWithoutProperties(props, [\"condition\", \"withinIf\"]);\n\n  return React.createElement(React.Fragment, null, React.Children.map(children, function (child) {\n    if (typeof child === 'string' || !child.type) {\n      return child;\n    }\n\n    if (child.type === ElIf || child.type === Else) {\n      return React.cloneElement(child, _objectSpread({\n        withinIf: withinIf\n      }, props), child.props.children);\n    }\n\n    return React.cloneElement(child, newProps, child.props.children);\n  }));\n};\n\nvar If = /*#__PURE__*/function (_React$Component) {\n  _inherits(If, _React$Component);\n\n  function If() {\n    _classCallCheck(this, If);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(If).apply(this, arguments));\n  }\n\n  _createClass(If, [{\n    key: \"render\",\n    value: function render() {\n      var children = React.Children.toArray(this.props.children);\n      var conditionalRendering;\n\n      if (this.props.condition) {\n        // render without <ElIf> and <Else>\n        conditionalRendering = children.filter(function (child) {\n          return child.type !== ElIf && child.type !== Else;\n        });\n      } else {\n        // find <ElIf> with `condition==true`;\n        var validElif = children.find(function (child) {\n          return child.type === ElIf && child.props.condition;\n        }); // if not exist valid <ElIf>, find <Else>\n\n        conditionalRendering = validElif || children.find(function (child) {\n          return child.type === Else;\n        });\n      }\n\n      return conditionalRendering ? cloneChildrenWithProps(conditionalRendering, _objectSpread({\n        withinIf: true\n      }, this.props)) : null;\n    }\n  }]);\n\n  return If;\n}(React.Component);\n\nvar ElIf = /*#__PURE__*/function (_React$Component2) {\n  _inherits(ElIf, _React$Component2);\n\n  function ElIf() {\n    _classCallCheck(this, ElIf);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ElIf).apply(this, arguments));\n  }\n\n  _createClass(ElIf, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.withinIf) {\n        // <ElIf> should be a nested child of <If> component\n        return null;\n      }\n\n      return cloneChildrenWithProps(this.props.children, this.props);\n    }\n  }]);\n\n  return ElIf;\n}(React.Component);\n\nvar Else = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Else, _React$Component3);\n\n  function Else() {\n    _classCallCheck(this, Else);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Else).apply(this, arguments));\n  }\n\n  _createClass(Else, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.withinIf) {\n        // <Else> should be a nested child of <If> component\n        return null;\n      }\n\n      return cloneChildrenWithProps(this.props.children, this.props);\n    }\n  }]);\n\n  return Else;\n}(React.Component);\n\nexport { If, ElIf, Else };","map":{"version":3,"sources":["C:/MYPROJ/projections/node_modules/rc-if-else/es/index.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_objectSpread","_objectWithoutProperties","React","cloneChildrenWithProps","children","props","condition","withinIf","newProps","createElement","Fragment","Children","map","child","type","ElIf","Else","cloneElement","If","_React$Component","apply","arguments","key","value","render","toArray","conditionalRendering","filter","validElif","find","Component","_React$Component2","_React$Component3"],"mappings":"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","sourcesContent":["import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport React from 'react';\n\n/**\n * clone elements child\n * @param {Object} props\n * @returns {ReactElement} child with props\n */\n\nvar cloneChildrenWithProps = function cloneChildrenWithProps(children, props) {\n  var condition = props.condition,\n      withinIf = props.withinIf,\n      newProps = _objectWithoutProperties(props, [\"condition\", \"withinIf\"]);\n\n  return React.createElement(React.Fragment, null, React.Children.map(children, function (child) {\n    if (typeof child === 'string' || !child.type) {\n      return child;\n    }\n\n    if (child.type === ElIf || child.type === Else) {\n      return React.cloneElement(child, _objectSpread({\n        withinIf: withinIf\n      }, props), child.props.children);\n    }\n\n    return React.cloneElement(child, newProps, child.props.children);\n  }));\n};\n\nvar If =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(If, _React$Component);\n\n  function If() {\n    _classCallCheck(this, If);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(If).apply(this, arguments));\n  }\n\n  _createClass(If, [{\n    key: \"render\",\n    value: function render() {\n      var children = React.Children.toArray(this.props.children);\n      var conditionalRendering;\n\n      if (this.props.condition) {\n        // render without <ElIf> and <Else>\n        conditionalRendering = children.filter(function (child) {\n          return child.type !== ElIf && child.type !== Else;\n        });\n      } else {\n        // find <ElIf> with `condition==true`;\n        var validElif = children.find(function (child) {\n          return child.type === ElIf && child.props.condition;\n        }); // if not exist valid <ElIf>, find <Else>\n\n        conditionalRendering = validElif || children.find(function (child) {\n          return child.type === Else;\n        });\n      }\n\n      return conditionalRendering ? cloneChildrenWithProps(conditionalRendering, _objectSpread({\n        withinIf: true\n      }, this.props)) : null;\n    }\n  }]);\n\n  return If;\n}(React.Component);\nvar ElIf =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ElIf, _React$Component2);\n\n  function ElIf() {\n    _classCallCheck(this, ElIf);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ElIf).apply(this, arguments));\n  }\n\n  _createClass(ElIf, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.withinIf) {\n        // <ElIf> should be a nested child of <If> component\n        return null;\n      }\n\n      return cloneChildrenWithProps(this.props.children, this.props);\n    }\n  }]);\n\n  return ElIf;\n}(React.Component);\nvar Else =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Else, _React$Component3);\n\n  function Else() {\n    _classCallCheck(this, Else);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Else).apply(this, arguments));\n  }\n\n  _createClass(Else, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.withinIf) {\n        // <Else> should be a nested child of <If> component\n        return null;\n      }\n\n      return cloneChildrenWithProps(this.props.children, this.props);\n    }\n  }]);\n\n  return Else;\n}(React.Component);\n\nexport { If, ElIf, Else };\n"]},"metadata":{},"sourceType":"module"}