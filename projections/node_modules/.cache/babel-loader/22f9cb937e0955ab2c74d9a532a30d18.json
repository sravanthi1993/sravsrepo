{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\SravsGithub\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { If, Else, Elif } from 'rc-if-else';\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\n\nfunction Projects(props) {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [state, setState] = useState({\n    projectID: \"\",\n    projectName: \"\",\n    description: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n    resources: [],\n    shouldShowProjections: false,\n    totalBill: 0,\n    poStatus: \"active\",\n    poValue: \"\",\n    poNum: \"\",\n    origPoNum: \"\",\n    poType: \"sow\",\n    projType: \"t&m\",\n    salesSegment: \"\",\n    cluster: \"\",\n    clientPartner: \"\",\n    accountManager: \"\",\n    cdmName: \"\"\n  });\n  const [projDetailsVisible, setprojDetailsVisible] = useState(false);\n\n  function setCurrentProject(e) {\n    var project = props.projectlist[e.target.name];\n    setprojDetailsVisible(true);\n    setState(prevstate => {\n      return { ...prevstate,\n        shouldShowProjections: false,\n        projectName: project.projectName,\n        startDate: new Date(Date.parse(project.startDate)),\n        endDate: new Date(Date.parse(project.endDate)),\n        description: project.description,\n        resources: project.resources,\n        poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\n        poValue: project.poValue,\n        poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\n        projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\n        poNum: project.poNumber,\n        origPoNum: project.orginalPoNumber,\n        salesSegment: project.salesSegment,\n        cluster: project.cluster,\n        clientPartner: project.clientPartner,\n        accountManager: project.accountManager,\n        cdmName: project.cdmName,\n        projDetailsVisible: true\n      };\n    });\n  }\n\n  function UpdateItems() {\n    setItems([{\n      \"Field\": \"PO Number\",\n      \"Value\": state.poNum\n    }, {\n      \"Field\": \"Name\",\n      \"Value\": state.projectName\n    }, {\n      \"Field\": \"Description\",\n      \"Value\": state.description\n    }, {\n      \"Field\": \"Start Date\",\n      \"Value\": state.startDate.toString()\n    }, {\n      \"Field\": \"End Date\",\n      \"Value\": state.endDate.toString()\n    }, {\n      \"Field\": \"Original PO Number\",\n      \"Value\": state.origPoNum\n    }, {\n      \"Field\": \"PO Current Status\",\n      \"Value\": state.poStatus\n    }, {\n      \"Field\": \"PO Value\",\n      \"Value\": state.poValue\n    }, {\n      \"Field\": \"PO Type\",\n      \"Value\": state.poType\n    }, {\n      \"Field\": \"Project Type\",\n      \"Value\": state.projType\n    }, {\n      \"Field\": \"Sales Segment\",\n      \"Value\": state.salesSegment\n    }, {\n      \"Field\": \"Cluster \",\n      \"Value\": state.cluster\n    }, {\n      \"Field\": \"Client Partner(L1)\",\n      \"Value\": state.clientPartner\n    }, {\n      \"Field\": \"Account Manager(L2)\",\n      \"Value\": state.accountManager\n    }, {\n      \"Field\": \"CDM Name\",\n      \"Value\": state.cdmName\n    }]);\n  }\n\n  React.useEffect(() => {\n    UpdateItems();\n  }, [state]); //setprojlist(props.projectlist);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ProjectsList\",\n      children: \" Projects List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), props.projectlist.map((proj, index) => {\n      console.log(proj.projectName);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: setCurrentProject,\n          name: index,\n          children: [proj.projectName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 103\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(If, {\n      condition: projDetailsVisible,\n      children: /*#__PURE__*/_jsxDEV(DetailsList, {\n        items: items,\n        setKey: \"set\",\n        layoutMode: DetailsListLayoutMode.justified,\n        selectionMode: SelectionMode.none\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Projects, \"biA0ZhCg1DBbHvTp4iV5/FHU3cE=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/SravsGithub/sravsrepo/projections/src/Components/Projects.js"],"names":["React","useState","If","Else","Elif","Label","Link","PrimaryButton","List","DetailsList","DetailsListLayoutMode","SelectionMode","Selection","IColumn","Projects","props","items","setItems","state","setState","projectID","projectName","description","startDate","Date","endDate","resources","shouldShowProjections","totalBill","poStatus","poValue","poNum","origPoNum","poType","projType","salesSegment","cluster","clientPartner","accountManager","cdmName","projDetailsVisible","setprojDetailsVisible","setCurrentProject","e","project","projectlist","target","name","prevstate","parse","projectType","poNumber","orginalPoNumber","UpdateItems","toString","useEffect","map","proj","index","console","log","justified","none"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { If, Else, Elif } from 'rc-if-else';\r\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\r\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\n\r\n\r\nfunction Projects(props) {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [state, setState] = useState({\r\n        projectID: \"\",\r\n        projectName: \"\",\r\n        description: \"\",\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        resources: [],\r\n        shouldShowProjections: false,\r\n        totalBill: 0,\r\n        poStatus: \"active\",\r\n        poValue: \"\",\r\n        poNum: \"\",\r\n        origPoNum: \"\",\r\n        poType: \"sow\",\r\n        projType: \"t&m\",\r\n        salesSegment: \"\",\r\n        cluster: \"\",\r\n        clientPartner: \"\",\r\n        accountManager: \"\",\r\n        cdmName: \"\"\r\n    });\r\n\r\n    const [projDetailsVisible, setprojDetailsVisible] = useState(false);\r\n\r\n\r\n    function setCurrentProject(e) {\r\n\r\n        var project = props.projectlist[e.target.name]\r\n        setprojDetailsVisible(true)\r\n        setState(prevstate => {\r\n            return {\r\n                ...prevstate,\r\n                shouldShowProjections: false,\r\n                projectName: project.projectName,\r\n                startDate: new Date(Date.parse(project.startDate)),\r\n                endDate: new Date(Date.parse(project.endDate)),\r\n                description: project.description,\r\n                resources: project.resources,\r\n                poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n                poValue: project.poValue,\r\n                poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n                projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n                poNum: project.poNumber,\r\n                origPoNum: project.orginalPoNumber,\r\n                salesSegment: project.salesSegment,\r\n                cluster: project.cluster,\r\n                clientPartner: project.clientPartner,\r\n                accountManager: project.accountManager,\r\n                cdmName: project.cdmName,\r\n                projDetailsVisible: true\r\n            }\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n    function UpdateItems() {\r\n        setItems([\r\n            {\r\n                \"Field\": \"PO Number\",\r\n                \"Value\": state.poNum\r\n            },\r\n            {\r\n                \"Field\": \"Name\",\r\n                \"Value\": state.projectName\r\n            }, {\r\n                \"Field\": \"Description\",\r\n                \"Value\": state.description\r\n            }, {\r\n                \"Field\": \"Start Date\",\r\n                \"Value\": state.startDate.toString()\r\n            }, {\r\n                \"Field\": \"End Date\",\r\n                \"Value\": state.endDate.toString()\r\n            }, {\r\n                \"Field\": \"Original PO Number\",\r\n                \"Value\": state.origPoNum\r\n            }, {\r\n                \"Field\": \"PO Current Status\",\r\n                \"Value\": state.poStatus\r\n            }, {\r\n                \"Field\": \"PO Value\",\r\n                \"Value\": state.poValue\r\n            }, {\r\n                \"Field\": \"PO Type\",\r\n                \"Value\": state.poType\r\n            }, {\r\n                \"Field\": \"Project Type\",\r\n                \"Value\": state.projType\r\n            }, {\r\n                \"Field\": \"Sales Segment\",\r\n                \"Value\": state.salesSegment\r\n            }, {\r\n                \"Field\": \"Cluster \",\r\n                \"Value\": state.cluster\r\n            }, {\r\n                \"Field\": \"Client Partner(L1)\",\r\n                \"Value\": state.clientPartner\r\n            }, {\r\n                \"Field\": \"Account Manager(L2)\",\r\n                \"Value\": state.accountManager\r\n            }, {\r\n                \"Field\": \"CDM Name\",\r\n                \"Value\": state.cdmName\r\n            }\r\n        ]);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        UpdateItems();\r\n    }, [state]);\r\n\r\n    //setprojlist(props.projectlist);\r\n    return (<div>\r\n        <h1 className=\"ProjectsList\"> Projects List </h1>\r\n        {\r\n            props.projectlist.map((proj, index) => {\r\n                console.log(proj.projectName);\r\n                return <div><Link onClick={setCurrentProject} name={index}>{proj.projectName} </Link> <br /></div>\r\n            })\r\n        }\r\n\r\n        <If condition={projDetailsVisible}>\r\n            <DetailsList\r\n                items={items}\r\n                setKey=\"set\"\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                selectionMode={SelectionMode.none}\r\n            />\r\n        </If>\r\n        <br />\r\n    </div>);\r\n\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}