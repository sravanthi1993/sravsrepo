{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\SravsGithub\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\n\nfunction setCurrentProject(e) {\n  _s();\n\n  const [state, setState] = useState({\n    projectID: \"\",\n    projectName: \"\",\n    description: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n    resources: [],\n    shouldShowProjections: false,\n    totalBill: 0,\n    poStatus: \"active\",\n    poValue: \"\",\n    poNum: \"\",\n    origPoNum: \"\",\n    poType: \"sow\",\n    projType: \"t&m\",\n    salesSegment: \"\",\n    cluster: \"\",\n    clientPartner: \"\",\n    accountManager: \"\",\n    cdmName: \"\"\n  });\n  const [projlist, setprojlist] = useState([]);\n  var project = projlist[e.target.name];\n  setState(prevstate => {\n    return { ...prevstate,\n      shouldShowProjections: false,\n      projectName: project.projectName,\n      startDate: new Date(Date.parse(project.startDate)),\n      endDate: new Date(Date.parse(project.endDate)),\n      description: project.description,\n      resources: project.resources,\n      poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\n      poValue: project.poValue,\n      poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\n      projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\n      poNum: project.poNumber,\n      origPoNum: project.orginalPoNumber,\n      salesSegment: project.salesSegment,\n      cluster: project.cluster,\n      clientPartner: project.clientPartner,\n      accountManager: project.accountManager,\n      cdmName: project.cdmName,\n      projDetailsVisible: true\n    };\n  });\n}\n\n_s(setCurrentProject, \"MdIvLMnKVvEHrZoOdYC0rIzgV0g=\");\n\nfunction Projects(props) {\n  setprojlist(props.projectlist);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ProjectsList\",\n      children: \" Projects List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), props.projectlist.map((proj, index) => {\n      console.log(proj.projectName);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: setCurrentProject,\n          name: index,\n          children: [proj.projectName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 104\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/SravsGithub/sravsrepo/projections/src/Components/Projects.js"],"names":["React","useState","Label","Link","PrimaryButton","List","setCurrentProject","e","state","setState","projectID","projectName","description","startDate","Date","endDate","resources","shouldShowProjections","totalBill","poStatus","poValue","poNum","origPoNum","poType","projType","salesSegment","cluster","clientPartner","accountManager","cdmName","projlist","setprojlist","project","target","name","prevstate","parse","projectType","poNumber","orginalPoNumber","projDetailsVisible","Projects","props","projectlist","map","proj","index","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\r\n\r\nfunction setCurrentProject(e) {\r\n    \r\nconst [state, setState] = useState({\r\n    projectID: \"\",\r\n    projectName : \"\",\r\n    description : \"\",\r\n    startDate : new Date(),\r\n    endDate : new Date(),\r\n    resources: [],\r\n    shouldShowProjections: false,\r\n    totalBill: 0,\r\n    poStatus:\"active\",\r\n    poValue: \"\",\r\n    poNum: \"\",\r\n    origPoNum: \"\",\r\n    poType: \"sow\",\r\n    projType: \"t&m\",\r\n    salesSegment: \"\",\r\n    cluster: \"\",\r\n    clientPartner: \"\",\r\n    accountManager: \"\",\r\n    cdmName: \"\"\r\n  });\r\n\r\nconst [projlist, setprojlist] = useState([]);\r\n\r\n    var project = projlist[e.target.name]\r\n    setState(prevstate =>\r\n        {return{...prevstate,\r\n          shouldShowProjections: false,\r\n          projectName: project.projectName,\r\n          startDate: new Date(Date.parse(project.startDate)),\r\n          endDate: new Date(Date.parse(project.endDate)),\r\n          description: project.description,\r\n          resources: project.resources,\r\n          poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n          poValue: project.poValue,\r\n          poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n          projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n          poNum: project.poNumber,\r\n          origPoNum: project.orginalPoNumber,\r\n          salesSegment: project.salesSegment,\r\n          cluster: project.cluster,\r\n          clientPartner: project.clientPartner,\r\n          accountManager: project.accountManager,\r\n          cdmName: project.cdmName,\r\n          projDetailsVisible: true\r\n        }\r\n        }\r\n    );\r\n}\r\nfunction Projects(props)  {\r\n    setprojlist(props.projectlist);\r\n    return (<div>\r\n        <h1 className = \"ProjectsList\"> Projects List </h1>\r\n        {\r\n            props.projectlist.map((proj , index)=> {\r\n                console.log(proj.projectName);\r\n                return <div><Link onClick={setCurrentProject} name= {index}>{proj.projectName} </Link> <br/></div>\r\n            })\r\n        }</div>);\r\n\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}