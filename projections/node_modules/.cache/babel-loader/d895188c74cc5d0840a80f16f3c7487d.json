{"ast":null,"code":"var _jsxFileName = \"C:\\\\SravsGithub\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Search.css';\nimport { If, Else, Elif } from 'rc-if-else';\nimport { Label, PrimaryButton, List } from 'office-ui-fabric-react';\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\nimport { DetailsList, DetailsListLayoutMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nfunction Search() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const searchBoxStyles = {\n    root: {\n      width: 200\n    }\n  };\n  const [state, setState] = useState({\n    searchString: \"\",\n    projectID: \"\",\n    projectName: \"\",\n    description: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n    projDetailsVisible: false,\n    resources: [],\n    projNotFound: false,\n    shouldShowProjections: false,\n    totalBill: 0,\n    poStatus: \"active\",\n    poValue: \"\",\n    poNum: \"\",\n    origPoNum: \"\",\n    poType: \"sow\",\n    projType: \"t&m\",\n    salesSegment: \"\",\n    cluster: \"\",\n    clientPartner: \"\",\n    accountManager: \"\",\n    cdmName: \"\"\n  });\n\n  function UpdateItems() {\n    setItems([{\n      \"Field\": \"PO Number\",\n      \"Value\": state.poNum\n    }, {\n      \"Field\": \"Name\",\n      \"Value\": state.projectName\n    }, {\n      \"Field\": \"Description\",\n      \"Value\": state.description\n    }, {\n      \"Field\": \"Start Date\",\n      \"Value\": state.startDate\n    }, {\n      \"Field\": \"End Date\",\n      \"Value\": state.endDate\n    }, {\n      \"Field\": \"Original PO Number\",\n      \"Value\": state.origPoNum\n    }, {\n      \"Field\": \"PO Current Status\",\n      \"Value\": state.poStatus\n    }, {\n      \"Field\": \"PO Value\",\n      \"Value\": state.poValue\n    }, {\n      \"Field\": \"PO Type\",\n      \"Value\": state.poType\n    }, {\n      \"Field\": \"Project Type\",\n      \"Value\": state.projType\n    }, {\n      \"Field\": \"sSales Segment\",\n      \"Value\": state.salesSegment\n    }, {\n      \"Field\": \"Cluster \",\n      \"Value\": state.cluster\n    }, {\n      \"Field\": \"Client Partner(L1)\",\n      \"Value\": state.clientPartner\n    }, {\n      \"Field\": \"Account Manager(L2)\",\n      \"Value\": state.accountManager\n    }, {\n      \"Field\": \"CDM Name\",\n      \"Value\": state.cdmName\n    }]);\n  }\n\n  function onSubmit(searchString) {\n    //e.preventDefault();\n    console.log(searchString + \"------------\"); // const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\"+searchString;\n\n    const url = \"http://localhost:7071/api/Search\";\n    fetch(url, {\n      method: \"GET\",\n      mode: \"no-cors\"\n    }).then(response => response.json()).then(project => {\n      if (project.projectID != null) {\n        setState(prevstate => {\n          return { ...prevstate,\n            projNotFound: false,\n            projDetailsVisible: true,\n            shouldShowProjections: false,\n            projectID: project.projectID,\n            projectName: project.projectName,\n            startDate: new Date(Date.parse(project.startDate)),\n            endDate: new Date(Date.parse(project.endDate)),\n            description: project.description,\n            resources: project.resources,\n            poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\n            poValue: project.poValue,\n            poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\n            projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\n            poNum: project.poNumber,\n            origPoNum: project.OrginalPoNumber,\n            salesSegment: project.salesSegment,\n            cluster: project.cluster,\n            clientPartner: project.clientPartner,\n            accountManager: project.accountManager,\n            cdmName: project.cdmName\n          };\n        });\n        UpdateItems();\n      } else {\n        setState(prevstate => {\n          return { ...prevstate,\n            projNotFound: true,\n            projDetailsVisible: false,\n            shouldShowProjections: false\n          };\n        });\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  function showProjections() {\n    var billing = 0;\n    state.resources.map(res => {\n      billing += res.billing;\n    });\n    var a = state.startDate;\n    var b = state.endDate;\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n    var diffdays = Math.floor((utc2 - utc1) / _MS_PER_DAY);\n    billing *= diffdays;\n    setState(prevstate => {\n      return { ...prevstate,\n        totalBill: billing,\n        shouldShowProjections: true\n      };\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SearchSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Search for the Project ID\"), /*#__PURE__*/React.createElement(SearchBox, {\n    styles: searchBoxStyles,\n    placeholder: \"Enter the Project name\",\n    onSearch: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(If, {\n    condition: state.projNotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \" Project not found! \")), /*#__PURE__*/React.createElement(If, {\n    condition: state.projDetailsVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"projdetailheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \" Project Details \"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"projdetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DetailsList, {\n    items: items,\n    setKey: \"set\",\n    layoutMode: DetailsListLayoutMode.justified,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(If, {\n    condition: state.resources.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, \" Resources \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projfield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, state.resources.map(res => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"projfield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, res.resourceName)))), /*#__PURE__*/React.createElement(If, {\n    condition: state.resources.length == 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \" No resources assigned to the project as of now. \")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(If, {\n    condition: state.resources.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryButton, {\n    id: \"Projections\",\n    onClick: showProjections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 18\n    }\n  }, \"Show Projection\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(If, {\n    condition: state.shouldShowProjections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"BillingTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, \" Resource Name\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, \" Bill (/day) \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, \" Bill for the project duration\")), state.resources.map(res => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"resentry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, \" \", res.resourceName, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"resentry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, \" $\", res.billing, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"resentry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, \" $\", res.billing * ((state.endDate - state.startDate) / _MS_PER_DAY)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, \" Total\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, \"  - \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, \" $\", state.totalBill, \" \"))))));\n}\n\n_s(Search, \"F8YRgvW4c7pdLqoctKIZbC/DzdQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/SravsGithub/sravsrepo/projections/src/Components/Search.js"],"names":["React","useState","If","Else","Elif","Label","PrimaryButton","List","SearchBox","ISearchBoxStyles","DetailsList","DetailsListLayoutMode","Selection","IColumn","_MS_PER_DAY","Search","items","setItems","searchBoxStyles","root","width","state","setState","searchString","projectID","projectName","description","startDate","Date","endDate","projDetailsVisible","resources","projNotFound","shouldShowProjections","totalBill","poStatus","poValue","poNum","origPoNum","poType","projType","salesSegment","cluster","clientPartner","accountManager","cdmName","UpdateItems","onSubmit","console","log","url","fetch","method","mode","then","response","json","project","prevstate","parse","projectType","poNumber","OrginalPoNumber","catch","err","alert","showProjections","billing","map","res","a","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","diffdays","Math","floor","justified","length","resourceName"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './Search.css';\r\nimport { If, Else, Elif } from 'rc-if-else';\r\nimport { Label, PrimaryButton, List } from 'office-ui-fabric-react';\r\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { DetailsList, DetailsListLayoutMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\nfunction Search(){\r\n\r\n    const [items, setItems] = useState([]);\r\n    const searchBoxStyles = { root: { width: 200 } };\r\n    const [state, setState] = useState({\r\n        searchString: \"\",\r\n        projectID: \"\",\r\n        projectName : \"\",\r\n        description : \"\",\r\n        startDate : new Date(),\r\n        endDate : new Date(),\r\n        projDetailsVisible: false,\r\n        resources: [],\r\n        projNotFound: false,\r\n        shouldShowProjections: false,\r\n        totalBill: 0,\r\n        poStatus:\"active\",\r\n        poValue: \"\",\r\n        poNum: \"\",\r\n        origPoNum: \"\",\r\n        poType: \"sow\",\r\n        projType: \"t&m\",\r\n        salesSegment: \"\",\r\n        cluster: \"\",\r\n        clientPartner: \"\",\r\n        accountManager: \"\",\r\n        cdmName: \"\"\r\n      });\r\n\r\n    function UpdateItems()\r\n    {\r\n        setItems( [\r\n            {\r\n                \"Field\": \"PO Number\",\r\n                \"Value\": state.poNum\r\n            },\r\n            {\r\n                \"Field\": \"Name\",\r\n                \"Value\": state.projectName\r\n            }, {\r\n                \"Field\": \"Description\",\r\n                \"Value\": state.description\r\n            }, {\r\n                \"Field\": \"Start Date\",\r\n                \"Value\": state.startDate\r\n            }, {\r\n                \"Field\": \"End Date\",\r\n                \"Value\": state.endDate\r\n            }, {\r\n                \"Field\": \"Original PO Number\",\r\n                \"Value\": state.origPoNum\r\n            }, {\r\n                \"Field\": \"PO Current Status\",\r\n                \"Value\": state.poStatus\r\n            }, {\r\n                \"Field\": \"PO Value\",\r\n                \"Value\": state.poValue\r\n            }, {\r\n                \"Field\": \"PO Type\",\r\n                \"Value\": state.poType\r\n            }, {\r\n                \"Field\": \"Project Type\",\r\n                \"Value\": state.projType\r\n            }, {\r\n                \"Field\": \"sSales Segment\",\r\n                \"Value\": state.salesSegment\r\n            }, {\r\n                \"Field\": \"Cluster \",\r\n                \"Value\": state.cluster\r\n            }, {\r\n                \"Field\": \"Client Partner(L1)\",\r\n                \"Value\": state.clientPartner\r\n            }, {\r\n                \"Field\": \"Account Manager(L2)\",\r\n                \"Value\": state.accountManager\r\n            }, {\r\n                \"Field\": \"CDM Name\",\r\n                \"Value\": state.cdmName\r\n            }\r\n        ]);\r\n    }\r\n    function onSubmit(searchString) {\r\n        //e.preventDefault();\r\n        console.log(searchString + \"------------\")\r\n        // const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\"+searchString;\r\n        const url = \"http://localhost:7071/api/Search\";\r\n        fetch(url, {\r\n              method : \"GET\",\r\n              mode: \"no-cors\",\r\n            }).then(response => response.json()\r\n            ).then(project => {\r\n                if(project.projectID != null)\r\n                {\r\n                setState(prevstate =>\r\n                    {return{...prevstate,\r\n                      projNotFound: false,\r\n                      projDetailsVisible: true,\r\n                      shouldShowProjections: false,\r\n                      projectID: project.projectID,\r\n                      projectName: project.projectName,\r\n                      startDate: new Date(Date.parse(project.startDate)),\r\n                      endDate: new Date(Date.parse(project.endDate)),\r\n                      description: project.description,\r\n                      resources: project.resources,\r\n                      poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n                      poValue: project.poValue,\r\n                      poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n                      projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n                      poNum: project.poNumber,\r\n                      origPoNum: project.OrginalPoNumber,\r\n                      salesSegment: project.salesSegment,\r\n                      cluster: project.cluster,\r\n                      clientPartner: project.clientPartner,\r\n                      accountManager: project.accountManager,\r\n                      cdmName: project.cdmName\r\n                    }\r\n                    }\r\n                );\r\n                UpdateItems();\r\n                }\r\n                else{\r\n                    setState(prevstate =>\r\n                        {return{...prevstate,\r\n                            projNotFound: true,\r\n                            projDetailsVisible: false,\r\n                            shouldShowProjections: false}\r\n                        })\r\n                }\r\n\r\n            }).catch(err => {alert(err)});\r\n      }\r\n      \r\n      function showProjections() {\r\n          var billing = 0\r\n        state.resources.map(res =>{\r\n            billing +=res.billing;   \r\n        } )   \r\n        var a = state.startDate;\r\n        var b = state.endDate;\r\n        const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n        const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n        var diffdays = Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n        billing *= diffdays  \r\n        setState(prevstate => {\r\n            return{...prevstate,totalBill : billing,\r\n                shouldShowProjections: true}\r\n            \r\n        })\r\n      }\r\n\r\n        return(\r\n            <div className=\"SearchSection\">\r\n                <Label>Search for the Project ID</Label>\r\n                <SearchBox\r\n                    styles={searchBoxStyles}\r\n                    placeholder=\"Enter the Project name\"\r\n                    onSearch={onSubmit}\r\n                />\r\n                <If condition={state.projNotFound}>\r\n                    <h3> Project not found! </h3>\r\n                </If>\r\n                <If condition={state.projDetailsVisible}>\r\n                <h2 className = \"projdetailheader\"> Project Details </h2>\r\n                <table className=\"projdetails\">\r\n                    <tbody>\r\n                    {/* <tr className=\"projfield\"> \r\n                        <td><label >Project ID</label></td>\r\n                        <td><label>{state.projectID}</label></td>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <td><label>Project Name</label></td>\r\n                        <td><label>{state.projectName}</label></td>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <td><label>Description</label></td>\r\n                        <td><label>{state.description}</label></td>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <td><label>Start Date</label></td>\r\n                        <td><label>{state.startDate.toString()}</label></td>\r\n                    </tr>\r\n                    <tr className=\"projfield\">\r\n                        <td><label>End Date</label></td>\r\n                        <td><label>{state.endDate.toString()}</label></td>\r\n                    </tr> */}\r\n                    \r\n                    <DetailsList\r\n                        items={items}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                    />\r\n                    <If condition={state.resources.length > 0}>\r\n                    <h3> Resources </h3>\r\n                    <div className=\"projfield\">\r\n                    { state.resources.map(res =>\r\n                        <li className=\"projfield\">{res.resourceName}</li>)\r\n                    }\r\n                    </div> \r\n                    </If>\r\n                    <If condition={state.resources.length == 0}>\r\n                    <h3> No resources assigned to the project as of now. </h3>\r\n                    </If>\r\n                    </tbody>\r\n                </table>\r\n                <br></br>\r\n                </If>\r\n                <If condition={state.resources.length > 0}>\r\n                 <PrimaryButton id=\"Projections\" onClick={showProjections}>Show Projection</PrimaryButton>\r\n                </If>\r\n                <br></br>\r\n                <If condition={state.shouldShowProjections} >\r\n                <br></br>\r\n                    <table className=\"BillingTable\">\r\n                        <tbody>\r\n                        <tr>\r\n                            <td> Resource Name</td>\r\n                            <td> Bill (/day) </td>\r\n                            <td> Bill for the project duration</td>\r\n                        </tr>\r\n                        { state.resources.map(res =>\r\n                        <tr>\r\n                            <td className=\"resentry\"> {res.resourceName} </td>\r\n                            <td className=\"resentry\"> ${res.billing} </td>\r\n                            <td className=\"resentry\"> ${res.billing * ((state.endDate - state.startDate)/_MS_PER_DAY)}</td>\r\n                        </tr>)}\r\n                        <br/>\r\n                        <tr>\r\n                            <td> Total</td>\r\n                            <td>  - </td>\r\n                            <td> ${state.totalBill} </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </If>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}