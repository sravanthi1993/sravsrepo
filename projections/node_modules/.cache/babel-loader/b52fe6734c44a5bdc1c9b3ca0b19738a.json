{"ast":null,"code":"var _jsxFileName = \"C:\\\\SravsGithub\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\AddProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { v1 as uuid } from \"uuid\";\nimport \"./AddProject.css\";\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { TextField, PrimaryButton, ChoiceGroup, Stack, IStackTokens } from 'office-ui-fabric-react';\nimport { DatePicker, DayOfWeek, IDatePickerStrings, mergeStyleSets } from 'office-ui-fabric-react';\n\nconst AddProject = () => {\n  _s();\n\n  const [state, setState] = useState({\n    projName: \"\",\n    description: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n    indicatorText: \"\"\n  });\n  const [poStatusOptions, setPoStatusOptions] = useState([{\n    key: 'active',\n    text: 'Active'\n  }, {\n    key: 'inActive',\n    text: 'Inactive'\n  }]);\n\n  function setProperty(e) {\n    console.log(\"asdasdasdasdasdasdasdas\");\n    var name = e.target.name;\n    var val = e.target.value;\n    console.log(name + \"-\" + val);\n    setState(prevstate => {\n      return { ...prevstate,\n        [name]: val\n      };\n    });\n  }\n\n  function setStartDate(date) {\n    setState(prevstate => {\n      return { ...prevstate,\n        \"startDate\": date\n      };\n    });\n  }\n\n  function setEndDate(date) {\n    setState(prevstate => {\n      return { ...prevstate,\n        \"endDate\": date\n      };\n    });\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    console.log(state.startDate + \" ---- \" + state.endDate);\n    const url = \"https://projectionsazurefunctions.azurewebsites.net/api/AddProject?code=aRwmurbZKy0napFo3BPImB79fgC3Hx5Ejk4FZGPmUuNWbR2bZIbdZg==\"; //const url = \"http://localhost:7071/api/AddProject\";\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        \"ProjectID\": uuid(),\n        \"ProjectName\": state.projName,\n        \"Description\": state.description,\n        \"StartDate\": state.startDate,\n        \"EndDate\": state.endDate\n      })\n    }).then(response => {\n      setState({\n        indicatorText: \"Added new Project\"\n      });\n    }).catch(err => {\n      setState({\n        indicatorText: \"Ran into an error while adding project\" + err\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"Label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \" Enter the details of the project below\"), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"Name\",\n    name: \"projName\",\n    value: state.projName,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"Description\",\n    name: \"description\",\n    value: state.description,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"field\",\n    label: \"Start Date\",\n    placeholder: \"Select a date...\",\n    name: \"startDate\",\n    value: state.startDate,\n    onSelectDate: setStartDate,\n    ariaLabel: \"Select a date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"field\",\n    label: \"End Date\",\n    placeholder: \"Select a date...\",\n    name: \"endDate\",\n    value: state.endDate,\n    onSelectDate: setEndDate,\n    ariaLabel: \"Select a date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"PO Number\",\n    name: \"poNum\",\n    value: state.poNum,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"Original PO Number\",\n    name: \"originalPoNum\",\n    value: state.origPoNum,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChoiceGroup, {\n    selectedKey: state.poStatus,\n    options: options,\n    onChange: setpoStatus,\n    label: \"PO Current Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"Name\",\n    name: \"projName\",\n    value: state.projName,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"Description\",\n    name: \"description\",\n    value: state.description,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"Name\",\n    name: \"projName\",\n    value: state.projName,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"field\",\n    label: \"Description\",\n    name: \"description\",\n    value: state.description,\n    onChange: setProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PrimaryButton, {\n    className: \"Add\",\n    text: \"Add\",\n    onClick: onSubmit,\n    allowDisabledFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"Indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, state.indicatorText))));\n};\n\n_s(AddProject, \"DmK+JGlAJUyJkiIjlwnDPCy0MII=\");\n\n_c = AddProject;\nexport default AddProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["C:/SravsGithub/sravsrepo/projections/src/Components/AddProject.js"],"names":["React","useState","useEffect","v1","uuid","Label","TextField","PrimaryButton","ChoiceGroup","Stack","IStackTokens","DatePicker","DayOfWeek","IDatePickerStrings","mergeStyleSets","AddProject","state","setState","projName","description","startDate","Date","endDate","indicatorText","poStatusOptions","setPoStatusOptions","key","text","setProperty","e","console","log","name","target","val","value","prevstate","setStartDate","date","setEndDate","onSubmit","preventDefault","url","fetch","method","headers","body","JSON","stringify","then","response","catch","err","poNum","origPoNum","poStatus","options","setpoStatus"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'; \r\nimport {v1 as uuid} from \"uuid\"; \r\nimport \"./AddProject.css\"\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { TextField, PrimaryButton, ChoiceGroup, Stack, IStackTokens } from 'office-ui-fabric-react';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings, mergeStyleSets } from 'office-ui-fabric-react';\r\n\r\n\tconst AddProject = () => {\r\n        const [state, setState] = useState({\r\n            projName : \"\",\r\n            description : \"\",\r\n            startDate : new Date(),\r\n            endDate : new Date(),\r\n            indicatorText: \"\"\r\n          });\r\n\r\n        const [poStatusOptions, setPoStatusOptions] = useState([\r\n            { key: 'active', text: 'Active' },\r\n            { key: 'inActive', text: 'Inactive' },\r\n          ])  \r\n        function setProperty(e) {\r\n            console.log(\"asdasdasdasdasdasdasdas\")\r\n            var name  = e.target.name;\r\n            var val = e.target.value;\r\n\r\n            console.log(name + \"-\" + val)\r\n                setState(prevstate => {\r\n                    return {...prevstate, [name]:  val };\r\n                });\r\n        } \r\n\r\n        function setStartDate(date){\r\n            setState(prevstate => {\r\n                return {...prevstate, \"startDate\":  date };\r\n            });\r\n        }\r\n    \r\n        function setEndDate(date) {\r\n            setState(prevstate => {\r\n                return {...prevstate, \"endDate\":  date };\r\n            });\r\n        }\r\n\r\n        function onSubmit(e) {\r\n            e.preventDefault();\r\n            console.log(state.startDate + \" ---- \"+ state.endDate);\r\n            const url = \"https://projectionsazurefunctions.azurewebsites.net/api/AddProject?code=aRwmurbZKy0napFo3BPImB79fgC3Hx5Ejk4FZGPmUuNWbR2bZIbdZg==\";\r\n            //const url = \"http://localhost:7071/api/AddProject\";\r\n            fetch(url, {\r\n                  method : \"POST\",\r\n                  headers: {\r\n                      'Content-Type': 'application/json'\r\n                      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                    },\r\n                  body:  JSON.stringify({\r\n                      \"ProjectID\": uuid(),\r\n                      \"ProjectName\": state.projName,\r\n                      \"Description\": state.description,\r\n                      \"StartDate\": state.startDate,\r\n                      \"EndDate\": state.endDate,\r\n                  })\r\n              }).then(response => {\r\n                  setState({indicatorText: \"Added new Project\"});\r\n              }).catch(err => {setState({indicatorText: \"Ran into an error while adding project\" + err})});\r\n          }\r\n\r\n\r\n\t\treturn (\r\n            <div>\r\n            <form onSubmit={onSubmit} >\r\n            <React.Fragment>\r\n                <Label className=\"Label\"> Enter the details of the project below</Label>\r\n                <TextField className=\"field\" label=\"Name\" name=\"projName\" value={state.projName} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Description\" name=\"description\" value={state.description} onChange={setProperty}/>\r\n                <DatePicker className=\"field\" label=\"Start Date\" placeholder=\"Select a date...\" name=\"startDate\" value={state.startDate} onSelectDate={setStartDate} ariaLabel=\"Select a date\"/>\r\n                <DatePicker className=\"field\" label=\"End Date\" placeholder=\"Select a date...\" name=\"endDate\" value={state.endDate} onSelectDate={setEndDate} ariaLabel=\"Select a date\"/>\r\n                <TextField className=\"field\" label=\"PO Number\" name=\"poNum\" value={state.poNum} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Original PO Number\" name=\"originalPoNum\" value={state.origPoNum} onChange={setProperty}/>\r\n                <ChoiceGroup selectedKey={state.poStatus} options={options} onChange={setpoStatus} label=\"PO Current Status\" />\r\n\r\n                <TextField className=\"field\" label=\"Name\" name=\"projName\" value={state.projName} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Description\" name=\"description\" value={state.description} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Name\" name=\"projName\" value={state.projName} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Description\" name=\"description\" value={state.description} onChange={setProperty}/>\r\n                \r\n\r\n                <PrimaryButton className=\"Add\" text=\"Add\" onClick={onSubmit} allowDisabledFocus />\r\n                {/* <button id=\"AddProject\"> Add </button> */}\r\n                <br/>\r\n                <Label className=\"Indicator\">{state.indicatorText}</Label>\r\n            </React.Fragment>\r\n            </form>\r\n            </div>\r\n        );\r\n\t}\r\n\r\nexport default AddProject; \r\n"]},"metadata":{},"sourceType":"module"}