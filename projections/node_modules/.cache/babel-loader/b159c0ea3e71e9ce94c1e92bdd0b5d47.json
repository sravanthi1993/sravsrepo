{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\samanchi\\\\Desktop\\\\React\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Search.css';\nimport { If, Else, Elif } from 'rc-if-else';\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport Projects from \"./Projects\";\n\nfunction Search() {\n  _s();\n\n  const searchBoxStyles = {\n    root: {\n      width: 200\n    }\n  };\n  const [state, setState] = useState({\n    searchString: \"\",\n    projListVisible: false,\n    projDetailsVisible: false,\n    resources: [],\n    projNotFound: false,\n    shouldShowProjections: false,\n    totalBill: 0,\n    poStatus: \"active\",\n    poValue: \"\",\n    poNum: \"\",\n    origPoNum: \"\",\n    poType: \"sow\",\n    projType: \"t&m\",\n    salesSegment: \"\",\n    cluster: \"\",\n    clientPartner: \"\",\n    accountManager: \"\",\n    cdmName: \"\"\n  });\n\n  function UpdateItems() {\n    setItems([{\n      \"Field\": \"PO Number\",\n      \"Value\": state.poNum\n    }, {\n      \"Field\": \"Name\",\n      \"Value\": state.projectName\n    }, {\n      \"Field\": \"Description\",\n      \"Value\": state.description\n    }, {\n      \"Field\": \"Start Date\",\n      \"Value\": state.startDate.toString()\n    }, {\n      \"Field\": \"End Date\",\n      \"Value\": state.endDate.toString()\n    }, {\n      \"Field\": \"Original PO Number\",\n      \"Value\": state.origPoNum\n    }, {\n      \"Field\": \"PO Current Status\",\n      \"Value\": state.poStatus\n    }, {\n      \"Field\": \"PO Value\",\n      \"Value\": state.poValue\n    }, {\n      \"Field\": \"PO Type\",\n      \"Value\": state.poType\n    }, {\n      \"Field\": \"Project Type\",\n      \"Value\": state.projType\n    }, {\n      \"Field\": \"sSales Segment\",\n      \"Value\": state.salesSegment\n    }, {\n      \"Field\": \"Cluster \",\n      \"Value\": state.cluster\n    }, {\n      \"Field\": \"Client Partner(L1)\",\n      \"Value\": state.clientPartner\n    }, {\n      \"Field\": \"Account Manager(L2)\",\n      \"Value\": state.accountManager\n    }, {\n      \"Field\": \"CDM Name\",\n      \"Value\": state.cdmName\n    }]);\n    var resDetails = [];\n    state.resources.map(res => {\n      resDetails.push({\n        \"ResourceName\": res.resourceName,\n        \"Billing (/day)\": res.billing\n      });\n    });\n    setResourceDetails(resDetails);\n  }\n\n  React.useEffect(() => {\n    UpdateItems();\n  }, [state]);\n\n  function setCurrentProject(e) {\n    var project = projlist[e.target.name];\n    setState(prevstate => {\n      return { ...prevstate,\n        shouldShowProjections: false,\n        projectName: project.projectName,\n        startDate: new Date(Date.parse(project.startDate)),\n        endDate: new Date(Date.parse(project.endDate)),\n        description: project.description,\n        resources: project.resources,\n        poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\n        poValue: project.poValue,\n        poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\n        projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\n        poNum: project.poNumber,\n        origPoNum: project.orginalPoNumber,\n        salesSegment: project.salesSegment,\n        cluster: project.cluster,\n        clientPartner: project.clientPartner,\n        accountManager: project.accountManager,\n        cdmName: project.cdmName,\n        projDetailsVisible: true\n      };\n    });\n  }\n\n  function onSubmit(searchString) {\n    //e.preventDefault();\n    const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\" + searchString; //const url = \"http://localhost:7071/api/Search?ProjectName=\"+searchString;\n\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(projects => {\n      console.log(projects);\n\n      if (projects.length != 0) {\n        setProjlist(projects);\n        setState(prevState => {\n          return { ...prevState,\n            projListVisible: true,\n            projNotFound: false\n          };\n        });\n      } else {\n        setState(prevstate => {\n          return { ...prevstate,\n            projNotFound: true,\n            projListVisible: false,\n            projDetailsVisible: false,\n            shouldShowProjections: false\n          };\n        });\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  function computeWorkingDaysBetweenTwoDays(startDate, endDate) {\n    // Validate input\n    if (endDate < startDate) {\n      return 0;\n    } // Calculate days between dates\n\n\n    var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\n\n    startDate.setHours(0, 0, 0, 1); // Start just after midnight\n\n    endDate.setHours(23, 59, 59, 999); // End just before midnight\n\n    var diff = endDate - startDate; // Milliseconds between datetime objects    \n\n    var days = Math.ceil(diff / millisecondsPerDay); // Subtract two weekend days for every week in between\n\n    var weeks = Math.floor(days / 7);\n    days -= weeks * 2; // Handle special cases\n\n    var startDay = startDate.getDay();\n    var endDay = endDate.getDay(); // Remove weekend not previously removed.   \n\n    if (startDay - endDay > 1) {\n      days -= 2;\n    } // Remove start day if span starts on Sunday but ends before Saturday\n\n\n    if (startDay == 0 && endDay != 6) {\n      days--;\n    } // Remove end day if span ends on Saturday but starts after Sunday\n\n\n    if (endDay == 6 && startDay != 0) {\n      days--;\n    }\n    /* Here is the code */\n\n\n    listofholidays.forEach(day => {\n      //console.log(day + \" -- \" + startDate + \" -- \" + endDate)\n      if (day >= startDate && day <= endDate) {\n        days--;\n      }\n    });\n    return days;\n  }\n\n  function showProjections() {\n    //const url = \"http://localhost:7071/api/search\";\n    const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\";\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(holidays => {\n      console.log(holidays);\n      holidays.map(holiday => {\n        listofholidays.push(new Date(Date.parse(holiday.holidayDate)));\n      });\n      console.log(listofholidays);\n      var total = 0;\n      var billDetails = [];\n      var billMap = new Map();\n      state.resources.map(res => {\n        var billing = res.billing; // var a = new Date(res.resourceProjStartDate);\n        //var b = state.endDate;\n\n        var start = new Date(res.resourceProjStartDate);\n        var end = new Date(start.getFullYear(), start.getMonth() + 1, 0);\n        console.log(start + \" - \" + end + \" - \" + billing);\n        end = end > state.endDate ? state.endDate : end;\n        var year = start.getFullYear();\n\n        while (end >= start) {\n          var diffDays = computeWorkingDaysBetweenTwoDays(start, end);\n          total += billing * diffDays;\n          var key = monthNames[start.getMonth()] + \" \" + start.getFullYear();\n          console.log(key + \"-\" + billMap.get(key));\n\n          if (!billMap.has(key)) {\n            billMap.set(key, 0);\n          }\n\n          billMap.set(key, billMap.get(key) + billing * diffDays);\n          var month = start.getMonth() == 11 ? -1 : start.getMonth();\n          year = start.getMonth() == 11 ? year + 1 : year;\n          start = new Date(year, month + 1, 1);\n          end = new Date(year, start.getMonth() + 1, 0);\n          end = end >= state.endDate ? state.endDate : end;\n          console.log(start + \" - \" + end + \" - \" + billing);\n        }\n      });\n      setState(prevstate => {\n        return { ...prevstate,\n          totalBill: total,\n          shouldShowProjections: true\n        };\n      });\n\n      for (const [key, value] of billMap) {\n        billDetails.push({\n          \"Month\": key,\n          \"Monthly Bill\": \"$\" + value\n        });\n        console.log(`${key}: ${value}`);\n      } //   billMap.map(monthlyBill => {\n      //       billDetails.push(\n      //           {\n      //               \"Month\": monthlyBill,\n      //               \"Monthly Bill\": \"$\" + (billing * diffDays)\n      //           },\n      //       )\n      //   })\n\n\n      setBillingDetails(billDetails);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchSection\",\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Search for the Project ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      styles: searchBoxStyles,\n      placeholder: \"Enter the Project name\",\n      onSearch: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(If, {\n      condition: state.projNotFound,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Project not found! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(If, {\n      condition: state.projListVisible,\n      children: /*#__PURE__*/_jsxDEV(Projects, {\n        projectlist: projlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Search, \"2tK95XhceH0nIxTey6WkDmp060k=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/samanchi/Desktop/React/sravsrepo/projections/src/Components/Search.js"],"names":["React","useState","If","Else","Elif","Label","Link","PrimaryButton","List","SearchBox","ISearchBoxStyles","DetailsList","DetailsListLayoutMode","SelectionMode","Selection","IColumn","Projects","Search","searchBoxStyles","root","width","state","setState","searchString","projListVisible","projDetailsVisible","resources","projNotFound","shouldShowProjections","totalBill","poStatus","poValue","poNum","origPoNum","poType","projType","salesSegment","cluster","clientPartner","accountManager","cdmName","UpdateItems","setItems","projectName","description","startDate","toString","endDate","resDetails","map","res","push","resourceName","billing","setResourceDetails","useEffect","setCurrentProject","e","project","projlist","target","name","prevstate","Date","parse","projectType","poNumber","orginalPoNumber","onSubmit","url","fetch","method","then","response","json","projects","console","log","length","setProjlist","prevState","catch","err","alert","computeWorkingDaysBetweenTwoDays","millisecondsPerDay","setHours","diff","days","Math","ceil","weeks","floor","startDay","getDay","endDay","listofholidays","forEach","day","showProjections","holidays","holiday","holidayDate","total","billDetails","billMap","Map","start","resourceProjStartDate","end","getFullYear","getMonth","year","diffDays","key","monthNames","get","has","set","month","value","setBillingDetails"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './Search.css';\r\nimport { If, Else, Elif } from 'rc-if-else';\r\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\r\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport Projects from \"./Projects\";\r\n\r\nfunction Search(){\r\n\r\n    const searchBoxStyles = { root: { width: 200 } };\r\n    const [state, setState] = useState({\r\n        searchString: \"\",\r\n        projListVisible: false,\r\n        projDetailsVisible: false,\r\n        resources: [],\r\n        projNotFound: false,\r\n        shouldShowProjections: false,\r\n        totalBill: 0,\r\n        poStatus:\"active\",\r\n        poValue: \"\",\r\n        poNum: \"\",\r\n        origPoNum: \"\",\r\n        poType: \"sow\",\r\n        projType: \"t&m\",\r\n        salesSegment: \"\",\r\n        cluster: \"\",\r\n        clientPartner: \"\",\r\n        accountManager: \"\",\r\n        cdmName: \"\"\r\n      });\r\n\r\n    function UpdateItems()\r\n    {\r\n        setItems( [\r\n            {\r\n                \"Field\": \"PO Number\",\r\n                \"Value\": state.poNum\r\n            },\r\n            {\r\n                \"Field\": \"Name\",\r\n                \"Value\": state.projectName\r\n            }, {\r\n                \"Field\": \"Description\",\r\n                \"Value\": state.description\r\n            }, {\r\n                \"Field\": \"Start Date\",\r\n                \"Value\": state.startDate.toString()\r\n            }, {\r\n                \"Field\": \"End Date\",\r\n                \"Value\": state.endDate.toString()\r\n            }, {\r\n                \"Field\": \"Original PO Number\",\r\n                \"Value\": state.origPoNum\r\n            }, {\r\n                \"Field\": \"PO Current Status\",\r\n                \"Value\": state.poStatus\r\n            }, {\r\n                \"Field\": \"PO Value\",\r\n                \"Value\": state.poValue\r\n            }, {\r\n                \"Field\": \"PO Type\",\r\n                \"Value\": state.poType\r\n            }, {\r\n                \"Field\": \"Project Type\",\r\n                \"Value\": state.projType\r\n            }, {\r\n                \"Field\": \"sSales Segment\",\r\n                \"Value\": state.salesSegment\r\n            }, {\r\n                \"Field\": \"Cluster \",\r\n                \"Value\": state.cluster\r\n            }, {\r\n                \"Field\": \"Client Partner(L1)\",\r\n                \"Value\": state.clientPartner\r\n            }, {\r\n                \"Field\": \"Account Manager(L2)\",\r\n                \"Value\": state.accountManager\r\n            }, {\r\n                \"Field\": \"CDM Name\",\r\n                \"Value\": state.cdmName\r\n            }\r\n        ]);\r\n        var resDetails = [];\r\n        state.resources.map(res =>{\r\n            resDetails.push(\r\n                {\r\n                    \"ResourceName\": res.resourceName,\r\n                    \"Billing (/day)\": res.billing,\r\n                }\r\n            )   \r\n        } ) \r\n        setResourceDetails(resDetails) ;\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        UpdateItems();\r\n      }, [state]);\r\n\r\n    function setCurrentProject(e) {\r\n        var project = projlist[e.target.name]\r\n        setState(prevstate =>\r\n            {return{...prevstate,\r\n              shouldShowProjections: false,\r\n              projectName: project.projectName,\r\n              startDate: new Date(Date.parse(project.startDate)),\r\n              endDate: new Date(Date.parse(project.endDate)),\r\n              description: project.description,\r\n              resources: project.resources,\r\n              poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n              poValue: project.poValue,\r\n              poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n              projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n              poNum: project.poNumber,\r\n              origPoNum: project.orginalPoNumber,\r\n              salesSegment: project.salesSegment,\r\n              cluster: project.cluster,\r\n              clientPartner: project.clientPartner,\r\n              accountManager: project.accountManager,\r\n              cdmName: project.cdmName,\r\n              projDetailsVisible: true\r\n            }\r\n            }\r\n        );\r\n    }\r\n\r\n    function onSubmit(searchString) {\r\n        //e.preventDefault();\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\"+searchString;\r\n        //const url = \"http://localhost:7071/api/Search?ProjectName=\"+searchString;\r\n        \r\n\r\n        fetch(url, {\r\n              method : \"GET\",\r\n            }).then(response => response.json()\r\n            ).then(projects => {\r\n                console.log(projects)\r\n                if(projects.length != 0)\r\n                {\r\n                    setProjlist(projects)\r\n                setState(prevState =>\r\n                    {return {...prevState, \r\n                        projListVisible: true,  \r\n                      projNotFound: false,\r\n                    }})\r\n                }\r\n                else{\r\n                    setState(prevstate =>\r\n                        {return{...prevstate,\r\n                            projNotFound: true,\r\n                            projListVisible: false,\r\n                            projDetailsVisible: false,\r\n                            shouldShowProjections: false}\r\n                        })\r\n                }\r\n\r\n            }).catch(err => {alert(err)});\r\n      }\r\n      \r\n     function computeWorkingDaysBetweenTwoDays(startDate, endDate) {\r\n      \r\n      // Validate input\r\n        if (endDate < startDate) {\r\n          return 0;\r\n        }\r\n      \r\n      // Calculate days between dates\r\n        var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\r\n        startDate.setHours(0, 0, 0, 1);  // Start just after midnight\r\n        endDate.setHours(23, 59, 59, 999);  // End just before midnight\r\n        var diff = endDate - startDate;  // Milliseconds between datetime objects    \r\n        var days = Math.ceil(diff / millisecondsPerDay);\r\n      \r\n        // Subtract two weekend days for every week in between\r\n        var weeks = Math.floor(days / 7);\r\n        days -= weeks * 2;\r\n      \r\n        // Handle special cases\r\n        var startDay = startDate.getDay();\r\n        var endDay = endDate.getDay();\r\n          \r\n        // Remove weekend not previously removed.   \r\n        if (startDay - endDay > 1) {\r\n          days -= 2;\r\n        }\r\n        // Remove start day if span starts on Sunday but ends before Saturday\r\n        if (startDay == 0 && endDay != 6) {\r\n          days--;  \r\n        }\r\n        // Remove end day if span ends on Saturday but starts after Sunday\r\n        if (endDay == 6 && startDay != 0) {\r\n          days--;\r\n        }\r\n\r\n        /* Here is the code */\r\n        listofholidays.forEach(day => {\r\n            //console.log(day + \" -- \" + startDate + \" -- \" + endDate)\r\n          if ((day >= startDate) && (day <= endDate)) {\r\n              days--;\r\n          }\r\n        });\r\n        return days;\r\n     }\r\n\r\n      function showProjections() {\r\n          \r\n        //const url = \"http://localhost:7071/api/search\";\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\"\r\n        fetch(url, {\r\n            method : \"GET\"\r\n          }).then(response => response.json()\r\n          ).then(holidays => {\r\n              console.log(holidays);\r\n              holidays.map(holiday =>  \r\n                {\r\n                    listofholidays.push(new Date(Date.parse(holiday.holidayDate)))\r\n                });\r\n              console.log(listofholidays)\r\n\r\n              var total = 0;\r\n              var billDetails = [];\r\n              var billMap = new Map();\r\n\r\n              state.resources.map(res => {\r\n\r\n                var billing = res.billing\r\n                 // var a = new Date(res.resourceProjStartDate);\r\n                  //var b = state.endDate;\r\n                  var start = new Date(res.resourceProjStartDate);\r\n                  var end = new Date(start.getFullYear(), start.getMonth() + 1, 0);\r\n                  console.log(start + \" - \" + end + \" - \" + billing)\r\n                  end = (end > state.endDate) ? state.endDate : end;\r\n                  var year = start.getFullYear();\r\n                  while (end >= start) {\r\n                      var diffDays = computeWorkingDaysBetweenTwoDays(start, end);\r\n                      total += billing * diffDays;\r\n\r\n                      var key = monthNames[start.getMonth()] + \" \" + start.getFullYear();\r\n                      console.log(key + \"-\" + billMap.get(key));\r\n                      if(!billMap.has(key))\r\n                      {\r\n                        billMap.set(key, 0);\r\n                      }\r\n                      billMap.set(key, billMap.get(key) + (billing * diffDays));\r\n                      \r\n\r\n                      var month = start.getMonth() == 11 ? -1 : start.getMonth();\r\n                      year = start.getMonth() == 11 ? year + 1 : year;\r\n                      start = new Date(year, month + 1, 1);\r\n                      end = new Date(year, start.getMonth() + 1, 0);\r\n                      end = (end >= state.endDate) ? state.endDate : end;\r\n                      console.log(start + \" - \" + end + \" - \" + billing)\r\n                  }\r\n              })\r\n\r\n      \r\n             setState(prevstate => {\r\n                  return{...prevstate,totalBill : total,\r\n                      shouldShowProjections: true,}\r\n                  \r\n              })\r\n              \r\n              for (const [key, value] of billMap) {\r\n                billDetails.push(\r\n                    {\r\n                        \"Month\": key,\r\n                        \"Monthly Bill\": \"$\" + value\r\n                    },\r\n                )\r\n                console.log(`${key}: ${value}`);\r\n              }\r\n\r\n             \r\n            //   billMap.map(monthlyBill => {\r\n            //       billDetails.push(\r\n            //           {\r\n            //               \"Month\": monthlyBill,\r\n            //               \"Monthly Bill\": \"$\" + (billing * diffDays)\r\n            //           },\r\n            //       )\r\n            //   })\r\n\r\n              setBillingDetails(billDetails);\r\n          });\r\n\r\n      }\r\n\r\n        return(\r\n            <div className=\"SearchSection\">\r\n                <Label>Search for the Project ID</Label>\r\n                <SearchBox\r\n                    styles={searchBoxStyles}\r\n                    placeholder=\"Enter the Project name\"\r\n                    onSearch={onSubmit}\r\n                />\r\n                \r\n                <If condition={state.projNotFound}>\r\n                    <h3> Project not found! </h3>\r\n                </If>\r\n                \r\n                <If condition={state.projListVisible}>\r\n                <Projects projectlist={projlist}/>\r\n                </If>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}