{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samanchi\\\\Desktop\\\\React\\\\sravsrepo\\\\projections\\\\src\\\\Components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Search.css';\nimport { If, Else, Elif } from 'rc-if-else';\nimport { Label, PrimaryButton, List } from 'office-ui-fabric-react';\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\nimport { DetailsList, DetailsListLayoutMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nconst holidays = [new Date(2021, 1, 19), new Date(2021, 4, 28)];\n\nfunction Search() {\n  _s();\n\n  const [billingDetails, setBillingDetails] = useState([]);\n  const [items, setItems] = useState([]);\n  const searchBoxStyles = {\n    root: {\n      width: 200\n    }\n  };\n  const [state, setState] = useState({\n    searchString: \"\",\n    projectID: \"\",\n    projectName: \"\",\n    description: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n    projDetailsVisible: false,\n    resources: [],\n    projNotFound: false,\n    shouldShowProjections: false,\n    totalBill: 0,\n    poStatus: \"active\",\n    poValue: \"\",\n    poNum: \"\",\n    origPoNum: \"\",\n    poType: \"sow\",\n    projType: \"t&m\",\n    salesSegment: \"\",\n    cluster: \"\",\n    clientPartner: \"\",\n    accountManager: \"\",\n    cdmName: \"\"\n  });\n\n  function UpdateItems() {\n    console.log(\"hereeee\");\n    setItems([{\n      \"Field\": \"PO Number\",\n      \"Value\": state.poNum\n    }, {\n      \"Field\": \"Name\",\n      \"Value\": state.projectName\n    }, {\n      \"Field\": \"Description\",\n      \"Value\": state.description\n    }, {\n      \"Field\": \"Start Date\",\n      \"Value\": state.startDate.toString()\n    }, {\n      \"Field\": \"End Date\",\n      \"Value\": state.endDate.toString()\n    }, {\n      \"Field\": \"Original PO Number\",\n      \"Value\": state.origPoNum\n    }, {\n      \"Field\": \"PO Current Status\",\n      \"Value\": state.poStatus\n    }, {\n      \"Field\": \"PO Value\",\n      \"Value\": state.poValue\n    }, {\n      \"Field\": \"PO Type\",\n      \"Value\": state.poType\n    }, {\n      \"Field\": \"Project Type\",\n      \"Value\": state.projType\n    }, {\n      \"Field\": \"sSales Segment\",\n      \"Value\": state.salesSegment\n    }, {\n      \"Field\": \"Cluster \",\n      \"Value\": state.cluster\n    }, {\n      \"Field\": \"Client Partner(L1)\",\n      \"Value\": state.clientPartner\n    }, {\n      \"Field\": \"Account Manager(L2)\",\n      \"Value\": state.accountManager\n    }, {\n      \"Field\": \"CDM Name\",\n      \"Value\": state.cdmName\n    }]);\n  }\n\n  React.useEffect(() => {\n    UpdateItems();\n  }, [state]);\n\n  function onSubmit(searchString) {\n    //e.preventDefault();\n    console.log(searchString + \"------------\");\n    const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\" + searchString; //const url = \"http://localhost:7071/api/Search?ProjectName=\"+searchString;\n\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(project => {\n      if (project.poNumber != 0) {\n        setState(prevstate => {\n          return { ...prevstate,\n            shouldShowProjections: false,\n            projectName: project.projectName,\n            startDate: new Date(Date.parse(project.startDate)),\n            endDate: new Date(Date.parse(project.endDate)),\n            description: project.description,\n            resources: project.resources,\n            poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\n            poValue: project.poValue,\n            poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\n            projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\n            poNum: project.poNumber,\n            origPoNum: project.orginalPoNumber,\n            salesSegment: project.salesSegment,\n            cluster: project.cluster,\n            clientPartner: project.clientPartner,\n            accountManager: project.accountManager,\n            cdmName: project.cdmName\n          };\n        });\n        setState(prevState => {\n          return { ...prevState,\n            projDetailsVisible: true,\n            projNotFound: false\n          };\n        });\n      } else {\n        setState(prevstate => {\n          return { ...prevstate,\n            projNotFound: true,\n            projDetailsVisible: false,\n            shouldShowProjections: false\n          };\n        });\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  function computeWorkingDaysBetweenTwoDays(startDate, endDate) {\n    // Validate input\n    if (endDate <= startDate) {\n      return 0;\n    } // Calculate days between dates\n\n\n    var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\n\n    startDate.setHours(0, 0, 0, 1); // Start just after midnight\n\n    endDate.setHours(23, 59, 59, 999); // End just before midnight\n\n    var diff = endDate - startDate; // Milliseconds between datetime objects    \n\n    var days = Math.ceil(diff / millisecondsPerDay); // Subtract two weekend days for every week in between\n\n    var weeks = Math.floor(days / 7);\n    days -= weeks * 2; // Handle special cases\n\n    var startDay = startDate.getDay();\n    var endDay = endDate.getDay(); // Remove weekend not previously removed.   \n\n    if (startDay - endDay > 1) {\n      days -= 2;\n    } // Remove start day if span starts on Sunday but ends before Saturday\n\n\n    if (startDay == 0 && endDay != 6) {\n      days--;\n    } // Remove end day if span ends on Saturday but starts after Sunday\n\n\n    if (endDay == 6 && startDay != 0) {\n      days--;\n    }\n    /* Here is the code */\n\n\n    holidays.forEach(day => {\n      console.log(day + \"--\" + startDate + \"--\" + endDate);\n\n      if (day >= startDate && day <= endDate) {\n        days--;\n      }\n    });\n    return days;\n  }\n\n  function showProjections() {\n    var billing = 0;\n    state.resources.map(res => {\n      billing += res.billing;\n    });\n    var a = state.startDate;\n    var b = state.endDate;\n    /*const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n    var diffdays = Math.floor((utc2 - utc1) / _MS_PER_DAY); */\n\n    var start = state.startDate;\n    var end = new Date(a.getFullYear(), a.getMonth() + 1, 0);\n    end = end > state.endDate ? state.endDate : end;\n    var total = 0;\n    var billDetails = [];\n\n    while (end >= start) {\n      var diffDays = computeWorkingDaysBetweenTwoDays(start, end);\n      total += billing * diffDays;\n      billDetails.push({\n        \"Month\": monthNames[start.getMonth()] + \" \" + start.getFullYear(),\n        \"Working days\": diffDays,\n        \"Monthly Bill\": \"$\" + billing * diffDays\n      });\n      start = new Date(a.getFullYear(), start.getMonth() + 1, 1);\n      end = new Date(a.getFullYear(), start.getMonth() + 1, 0);\n      end = end > state.endDate ? state.endDate : end;\n    }\n\n    setState(prevstate => {\n      return { ...prevstate,\n        totalBill: total,\n        shouldShowProjections: true\n      };\n    });\n    setBillingDetails(billDetails);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SearchSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Search for the Project ID\"), /*#__PURE__*/React.createElement(SearchBox, {\n    styles: searchBoxStyles,\n    placeholder: \"Enter the Project name\",\n    onSearch: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(If, {\n    condition: state.projNotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, \" Project not found! \")), /*#__PURE__*/React.createElement(If, {\n    condition: state.projDetailsVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"projdetailheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, \" Project Details \"), /*#__PURE__*/React.createElement(DetailsList, {\n    items: items,\n    setKey: \"set\",\n    layoutMode: DetailsListLayoutMode.justified,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(If, {\n    condition: state.resources.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, \" Resources \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projfield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, state.resources.map(res => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"projfield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, res.resourceName)))), /*#__PURE__*/React.createElement(If, {\n    condition: state.resources.length == 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, \" No resources assigned to the project as of now. \")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(If, {\n    condition: state.resources.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryButton, {\n    id: \"Projections\",\n    onClick: showProjections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 18\n    }\n  }, \"Show Projection\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(If, {\n    condition: state.shouldShowProjections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DetailsList, {\n    items: billingDetails,\n    setKey: \"set\",\n    layoutMode: DetailsListLayoutMode.justified,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, \" Total Bill - $\", state.totalBill)));\n}\n\n_s(Search, \"bWw2nKLtmHkWjeUIqeD99F9OEPg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/samanchi/Desktop/React/sravsrepo/projections/src/Components/Search.js"],"names":["React","useState","If","Else","Elif","Label","PrimaryButton","List","SearchBox","ISearchBoxStyles","DetailsList","DetailsListLayoutMode","Selection","IColumn","monthNames","_MS_PER_DAY","holidays","Date","Search","billingDetails","setBillingDetails","items","setItems","searchBoxStyles","root","width","state","setState","searchString","projectID","projectName","description","startDate","endDate","projDetailsVisible","resources","projNotFound","shouldShowProjections","totalBill","poStatus","poValue","poNum","origPoNum","poType","projType","salesSegment","cluster","clientPartner","accountManager","cdmName","UpdateItems","console","log","toString","useEffect","onSubmit","url","fetch","method","then","response","json","project","poNumber","prevstate","parse","projectType","orginalPoNumber","prevState","catch","err","alert","computeWorkingDaysBetweenTwoDays","millisecondsPerDay","setHours","diff","days","Math","ceil","weeks","floor","startDay","getDay","endDay","forEach","day","showProjections","billing","map","res","a","b","start","end","getFullYear","getMonth","total","billDetails","diffDays","push","justified","length","resourceName"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './Search.css';\r\nimport { If, Else, Elif } from 'rc-if-else';\r\nimport { Label, PrimaryButton, List } from 'office-ui-fabric-react';\r\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { DetailsList, DetailsListLayoutMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\nconst holidays = [new Date(2021,1,19), new Date(2021,4,28)];\r\nfunction Search(){\r\n\r\n    const [billingDetails, setBillingDetails] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const searchBoxStyles = { root: { width: 200 } };\r\n    const [state, setState] = useState({\r\n        searchString: \"\",\r\n        projectID: \"\",\r\n        projectName : \"\",\r\n        description : \"\",\r\n        startDate : new Date(),\r\n        endDate : new Date(),\r\n        projDetailsVisible: false,\r\n        resources: [],\r\n        projNotFound: false,\r\n        shouldShowProjections: false,\r\n        totalBill: 0,\r\n        poStatus:\"active\",\r\n        poValue: \"\",\r\n        poNum: \"\",\r\n        origPoNum: \"\",\r\n        poType: \"sow\",\r\n        projType: \"t&m\",\r\n        salesSegment: \"\",\r\n        cluster: \"\",\r\n        clientPartner: \"\",\r\n        accountManager: \"\",\r\n        cdmName: \"\"\r\n      });\r\n\r\n    function UpdateItems()\r\n    {\r\n        console.log(\"hereeee\");\r\n        setItems( [\r\n            {\r\n                \"Field\": \"PO Number\",\r\n                \"Value\": state.poNum\r\n            },\r\n            {\r\n                \"Field\": \"Name\",\r\n                \"Value\": state.projectName\r\n            }, {\r\n                \"Field\": \"Description\",\r\n                \"Value\": state.description\r\n            }, {\r\n                \"Field\": \"Start Date\",\r\n                \"Value\": state.startDate.toString()\r\n            }, {\r\n                \"Field\": \"End Date\",\r\n                \"Value\": state.endDate.toString()\r\n            }, {\r\n                \"Field\": \"Original PO Number\",\r\n                \"Value\": state.origPoNum\r\n            }, {\r\n                \"Field\": \"PO Current Status\",\r\n                \"Value\": state.poStatus\r\n            }, {\r\n                \"Field\": \"PO Value\",\r\n                \"Value\": state.poValue\r\n            }, {\r\n                \"Field\": \"PO Type\",\r\n                \"Value\": state.poType\r\n            }, {\r\n                \"Field\": \"Project Type\",\r\n                \"Value\": state.projType\r\n            }, {\r\n                \"Field\": \"sSales Segment\",\r\n                \"Value\": state.salesSegment\r\n            }, {\r\n                \"Field\": \"Cluster \",\r\n                \"Value\": state.cluster\r\n            }, {\r\n                \"Field\": \"Client Partner(L1)\",\r\n                \"Value\": state.clientPartner\r\n            }, {\r\n                \"Field\": \"Account Manager(L2)\",\r\n                \"Value\": state.accountManager\r\n            }, {\r\n                \"Field\": \"CDM Name\",\r\n                \"Value\": state.cdmName\r\n            }\r\n        ]);\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        UpdateItems();\r\n      }, [state]);\r\n\r\n    function onSubmit(searchString) {\r\n        //e.preventDefault();\r\n        console.log(searchString + \"------------\")\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\"+searchString;\r\n        //const url = \"http://localhost:7071/api/Search?ProjectName=\"+searchString;\r\n        \r\n\r\n        fetch(url, {\r\n              method : \"GET\",\r\n            }).then(response => response.json()\r\n            ).then(project => {\r\n                if(project.poNumber != 0)\r\n                {\r\n                setState(prevstate =>\r\n                    {return{...prevstate,\r\n                      shouldShowProjections: false,\r\n                      projectName: project.projectName,\r\n                      startDate: new Date(Date.parse(project.startDate)),\r\n                      endDate: new Date(Date.parse(project.endDate)),\r\n                      description: project.description,\r\n                      resources: project.resources,\r\n                      poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n                      poValue: project.poValue,\r\n                      poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n                      projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n                      poNum: project.poNumber,\r\n                      origPoNum: project.orginalPoNumber,\r\n                      salesSegment: project.salesSegment,\r\n                      cluster: project.cluster,\r\n                      clientPartner: project.clientPartner,\r\n                      accountManager: project.accountManager,\r\n                      cdmName: project.cdmName\r\n                    }\r\n                    }\r\n                );\r\n                setState(prevState =>\r\n                    {return {...prevState, \r\n                      projDetailsVisible: true,  \r\n                      projNotFound: false,\r\n                    }})\r\n                }\r\n                else{\r\n                    setState(prevstate =>\r\n                        {return{...prevstate,\r\n                            projNotFound: true,\r\n                            projDetailsVisible: false,\r\n                            shouldShowProjections: false}\r\n                        })\r\n                }\r\n\r\n            }).catch(err => {alert(err)});\r\n      }\r\n      \r\n     function computeWorkingDaysBetweenTwoDays(startDate, endDate) {\r\n      \r\n      // Validate input\r\n        if (endDate <= startDate) {\r\n          return 0;\r\n        }\r\n      \r\n      // Calculate days between dates\r\n        var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\r\n        startDate.setHours(0, 0, 0, 1);  // Start just after midnight\r\n        endDate.setHours(23, 59, 59, 999);  // End just before midnight\r\n        var diff = endDate - startDate;  // Milliseconds between datetime objects    \r\n        var days = Math.ceil(diff / millisecondsPerDay);\r\n      \r\n        // Subtract two weekend days for every week in between\r\n        var weeks = Math.floor(days / 7);\r\n        days -= weeks * 2;\r\n      \r\n        // Handle special cases\r\n        var startDay = startDate.getDay();\r\n        var endDay = endDate.getDay();\r\n          \r\n        // Remove weekend not previously removed.   \r\n        if (startDay - endDay > 1) {\r\n          days -= 2;\r\n        }\r\n        // Remove start day if span starts on Sunday but ends before Saturday\r\n        if (startDay == 0 && endDay != 6) {\r\n          days--;  \r\n        }\r\n        // Remove end day if span ends on Saturday but starts after Sunday\r\n        if (endDay == 6 && startDay != 0) {\r\n          days--;\r\n        }\r\n        /* Here is the code */\r\n        holidays.forEach(day => {\r\n            console.log(day + \"--\" + startDate + \"--\" + endDate)\r\n          if ((day >= startDate) && (day <= endDate)) {\r\n              days--;\r\n          }\r\n        });\r\n        return days;\r\n     }\r\n\r\n      function showProjections() {\r\n          var billing = 0\r\n        state.resources.map(res =>{\r\n            billing +=res.billing;   \r\n        } )   \r\n        var a = state.startDate;\r\n        var b = state.endDate;\r\n        /*const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n        const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n        var diffdays = Math.floor((utc2 - utc1) / _MS_PER_DAY); */\r\n        \r\n        var start = state.startDate;\r\n        var end = new Date(a.getFullYear(), a.getMonth() + 1, 0);\r\n        end = (end > state.endDate) ? state.endDate: end;\r\n        var total = 0;\r\n        var billDetails = [];\r\n        while (end >= start)\r\n        {\r\n            var diffDays = computeWorkingDaysBetweenTwoDays(start, end);\r\n            total += billing*diffDays;\r\n            billDetails.push(\r\n                {\r\n                  \"Month\": monthNames[start.getMonth()] + \" \" + start.getFullYear(),\r\n                  \"Working days\": diffDays,\r\n                  \"Monthly Bill\": \"$\"+(billing*diffDays)},\r\n                )\r\n            start = new Date(a.getFullYear(), start.getMonth() + 1, 1);\r\n            end = new Date(a.getFullYear(), start.getMonth()+1, 0);\r\n            end = (end > state.endDate) ? state.endDate: end;\r\n       }\r\n\r\n       setState(prevstate => {\r\n            return{...prevstate,totalBill : total,\r\n                shouldShowProjections: true,}\r\n            \r\n        })\r\n        setBillingDetails(billDetails);\r\n      }\r\n\r\n        return(\r\n            <div className=\"SearchSection\">\r\n                <Label>Search for the Project ID</Label>\r\n                <SearchBox\r\n                    styles={searchBoxStyles}\r\n                    placeholder=\"Enter the Project name\"\r\n                    onSearch={onSubmit}\r\n                />\r\n                <If condition={state.projNotFound}>\r\n                    <h3> Project not found! </h3>\r\n                </If>\r\n                <If condition={state.projDetailsVisible}>\r\n                <h2 className = \"projdetailheader\"> Project Details </h2>\r\n                    <DetailsList\r\n                        items={items}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                    /> <br/>\r\n                    <If condition={state.resources.length > 0}>\r\n                    <Label className=\"field\"> Resources </Label>\r\n                    <div className=\"projfield\">\r\n                    { state.resources.map(res =>\r\n                        <li className=\"projfield\">{res.resourceName}</li>)\r\n                    }\r\n                    </div> \r\n                    </If>\r\n                    <If condition={state.resources.length == 0}>\r\n                    <h3> No resources assigned to the project as of now. </h3>\r\n                    </If>\r\n                    <br/>\r\n                </If>\r\n                <If condition={state.resources.length > 0}>\r\n                 <PrimaryButton id=\"Projections\" onClick={showProjections}>Show Projection</PrimaryButton>\r\n                </If>\r\n                <br></br>\r\n                <If condition={state.shouldShowProjections} >\r\n                <DetailsList\r\n                        items={billingDetails}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                    /> \r\n                    <h3> Total Bill - ${state.totalBill}</h3>\r\n                </If>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}