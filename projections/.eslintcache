[{"C:\\SravsGithub\\sravsrepo\\projections\\src\\index.js":"1","C:\\SravsGithub\\sravsrepo\\projections\\src\\App.js":"2","C:\\SravsGithub\\sravsrepo\\projections\\src\\reportWebVitals.js":"3","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\AddProject.js":"4","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\AddResource.js":"5","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\Search.js":"6","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\Holidays.js":"7","C:\\SravsGithub\\sravsrepo\\projections\\src\\Config.js":"8","C:\\SravsGithub\\sravsrepo\\projections\\src\\AuthProvider.js":"9","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\Projects.js":"10"},{"size":797,"mtime":1615233385720,"results":"11","hashOfConfig":"12"},{"size":3674,"mtime":1617235594193,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612225784510,"results":"14","hashOfConfig":"12"},{"size":7077,"mtime":1614664814315,"results":"15","hashOfConfig":"12"},{"size":3504,"mtime":1615943949390,"results":"16","hashOfConfig":"12"},{"size":15201,"mtime":1616010013590,"results":"17","hashOfConfig":"12"},{"size":3758,"mtime":1616801602678,"results":"18","hashOfConfig":"12"},{"size":238,"mtime":1614731260562,"results":"19","hashOfConfig":"12"},{"size":710,"mtime":1615255210585,"results":"20","hashOfConfig":"12"},{"size":4666,"mtime":1617236963658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"efpbsr",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\SravsGithub\\sravsrepo\\projections\\src\\index.js",["48"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AzureAD } from 'react-aad-msal';\r\nimport { config } from './Config';\r\nimport {authProvider} from './AuthProvider'\r\n\r\nReactDOM.render(\r\n  <AzureAD provider={authProvider} forceLogin={true}>\r\n    <App />\r\n  </AzureAD>,\r\n/*<AzureAD provider={config} forceLogin={true}>\r\n<App />\r\n</AzureAD>,\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,*/\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["49","50"],"C:\\SravsGithub\\sravsrepo\\projections\\src\\App.js",[],"C:\\SravsGithub\\sravsrepo\\projections\\src\\reportWebVitals.js",[],"C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\AddProject.js",["51","52","53","54","55","56","57","58","59","60","61","62"],"import React, {useState, useEffect} from 'react'; \r\nimport {v1 as uuid} from \"uuid\"; \r\nimport \"./AddProject.css\"\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { TextField, PrimaryButton, ChoiceGroup, Stack, IStackTokens } from 'office-ui-fabric-react';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings, mergeStyleSets } from 'office-ui-fabric-react';\r\n\r\n\tconst AddProject = () => {\r\n        const [state, setState] = useState({\r\n            projName : \"\",\r\n            description : \"\",\r\n            startDate : new Date(),\r\n            endDate : new Date(),\r\n            indicatorText: \"\",\r\n            poStatus:\"active\",\r\n            poValue: \"\",\r\n            poNum: \"\",\r\n            origPoNum: \"\",\r\n            poType: \"sow\",\r\n            projType: \"t&m\",\r\n            salesSegment: \"\",\r\n            cluster: \"\",\r\n            clientPartner: \"\",\r\n            accountManager: \"\",\r\n            cdmName: \"\"\r\n          });\r\n\r\n        const [poStatusOptions, setPoStatusOptions] = useState([\r\n            { key: 'active', text: 'Active' },\r\n            { key: 'inActive', text: 'Inactive' },\r\n          ])  \r\n\r\n          const [poTypes, setPOTypes] = useState([\r\n            { key: 'sow', text: 'SOW' },\r\n            { key: 'beeline', text: 'Beeline' },\r\n          ]) \r\n\r\n          const [projTypes, setProjTypes] = useState([\r\n            { key: 't&m', text: 'T&M' },\r\n            { key: 'fixed', text: 'Fixed Price' },\r\n            { key: 'na', text: 'N/A' }\r\n          ])\r\n\r\n        function setOption(e, option) {\r\n            setState(prevState => { return {...prevState, [e.target.name]:option.key}})\r\n        }\r\n\r\n        function setProperty(e) {\r\n            var name  = e.target.name;\r\n            var val = e.target.value;\r\n\r\n            console.log(name + \"-\" + val)\r\n                setState(prevstate => {\r\n                    return {...prevstate, [name]:  val };\r\n                });\r\n        } \r\n\r\n        function setStartDate(date){\r\n            setState(prevstate => {\r\n                return {...prevstate, \"startDate\":  date };\r\n            });\r\n        }\r\n    \r\n        function setEndDate(date) {\r\n            setState(prevstate => {\r\n                return {...prevstate, \"endDate\":  date };\r\n            });\r\n        }\r\n\r\n        \r\n        \r\n        \r\n\r\n        function onSubmit(e) {\r\n            e.preventDefault();\r\n            console.log(state.startDate + \" ---- \"+ state.endDate);\r\n            const url = \"https://projectionsazurefunctions.azurewebsites.net/api/AddProject?code=aRwmurbZKy0napFo3BPImB79fgC3Hx5Ejk4FZGPmUuNWbR2bZIbdZg==\";\r\n            //const url = \"http://localhost:7071/api/AddProject\";\r\n            fetch(url, {\r\n                  method : \"POST\",\r\n                  mode: \"no-cors\",\r\n                  headers: {\r\n                      'Content-Type': 'application/json',\r\n                      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                    },\r\n                  body:  JSON.stringify({\r\n                      \"ProjectID\": uuid(),\r\n                      \"ProjectName\": state.projName,\r\n                      \"Description\": state.description,\r\n                      \"StartDate\": state.startDate,\r\n                      \"EndDate\": state.endDate,\r\n                      \"PoStatus\": state.poStatus == \"active\" ? 0: 1,\r\n                      \"PoValue\": parseInt(state.poValue) || 0,\r\n                      \"PoNumber\": parseInt(state.poNum) || 0,\r\n                      \"OrginalPoNumber\": parseInt(state.origPoNum) || 0,\r\n                      \"PoType\": state.poType == \"sow\" ? 0: 1,\r\n                      \"ProjectType\": state.projType == \"t&m\" ? 0 : 1,\r\n                      \"SalesSegment\": state.salesSegment,\r\n                      \"Cluster\": state.cluster,\r\n                      \"ClientPartner\": state.clientPartner,\r\n                      \"AccountManager\": state.accountManager,\r\n                      \"CdmName\": state.cdmName\r\n                  })\r\n              }).then(response => {\r\n                  setState({indicatorText: \"Added new Project\"});\r\n              }).catch(err => {setState({indicatorText: \"Ran into an error while adding project \" + err})});\r\n          }\r\n\r\n\r\n\t\treturn (\r\n            <div>\r\n            <form onSubmit={onSubmit} >\r\n            <React.Fragment>\r\n                <Label className=\"Label\"> Enter the details of the project below</Label>\r\n                <TextField className=\"field\" label=\"Name\" name=\"projName\" value={state.projName} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Description\" name=\"description\" value={state.description} onChange={setProperty}/>\r\n                <DatePicker className=\"field\" label=\"Start Date\" placeholder=\"Select a date...\" name=\"startDate\" value={state.startDate} onSelectDate={setStartDate} ariaLabel=\"Select a date\"/>\r\n                <DatePicker className=\"field\" label=\"End Date\" placeholder=\"Select a date...\" name=\"endDate\" value={state.endDate} onSelectDate={setEndDate} ariaLabel=\"Select a date\"/>\r\n                <TextField className=\"field\" label=\"PO Number\" name=\"poNum\" value={state.poNum} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Original PO Number\" name=\"origPoNum\" value={state.origPoNum} onChange={setProperty}/>\r\n                <ChoiceGroup row className=\"field\" name=\"poStatus\" selectedKey={state.poStatus} options={poStatusOptions} onChange={setOption} label=\"PO Current Status\" />\r\n                <TextField className=\"field\" label=\"PO Value\" name=\"poValue\" value={state.poValue} onChange={setProperty}/>\r\n                <ChoiceGroup className=\"field\" selectedKey={state.poType} name=\"poType\" options={poTypes} onChange={setOption} label=\"PO Type\" />\r\n                <ChoiceGroup className=\"field\" selectedKey={state.projType} name=\"projType\" options={projTypes} onChange={setOption} label=\"Project Type\" />\r\n                <TextField className=\"field\" label=\"Sales Segment \" name=\"salesSegment\" value={state.salesSegment} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Cluster\" name=\"cluster\" value={state.cluster} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Client Partner(L1)\" name=\"clientPartner\" value={state.clientPartner} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Account Manager(L2)\" name=\"accountManager\" value={state.accountManager} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"CDM Name\" name=\"cdmName\" value={state.cdmName} onChange={setProperty}/>\r\n                \r\n                <PrimaryButton className=\"Add\" text=\"AddResource\" onClick={onSubmit} allowDisabledFocus />\r\n                <PrimaryButton className=\"Add\" text=\"Add\" onClick={onSubmit} allowDisabledFocus />\r\n                {/* <button id=\"AddProject\"> Add </button> */}\r\n                <br/>\r\n                <Label className=\"Indicator\">{state.indicatorText}</Label>\r\n            </React.Fragment>\r\n            </form>\r\n            </div>\r\n        );\r\n\t}\r\n\r\nexport default AddProject; \r\n","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\AddResource.js",["63","64"],"import React, { useState } from 'react';\r\nimport {v1 as uuid} from \"uuid\"; \r\nimport { TextField, PrimaryButton,DatePicker, Stack, IStackTokens } from 'office-ui-fabric-react';\r\n//import DatePicker from 'react-date-picker';\r\n\r\nfunction AddResource() \r\n{ \r\n    const [state, setState] = useState({\r\n        resName : \"\",\r\n        skils : \"\",\r\n        billing : \"\",\r\n        projectId : \"\",\r\n        resourceprojectstartdate : new Date(),//added new\r\n        resourceId : \"\",//added new\r\n        resourcelocation : \"\",\r\n        indicatorText: \"\"\r\n      });\r\n\r\n    //setState( { \"projName\" : \"asadsa\" });\r\n    function setProperty(e) {\r\n        setState(prevState => {\r\n            return {...prevState, [e.target.name] : e.target.value };\r\n        });\r\n    }\r\n\r\n    function setStartDate(date){\r\n        setState(prevstate => {\r\n            return {...prevstate, \"resourceprojectstartdate\":  date };\r\n        });\r\n    }\r\n\r\n    function onSubmit(e){\r\n      e.preventDefault();\r\n      const url = \"https://projectionsazurefunctions.azurewebsites.net/api/AddResource?code=20KXEmWE7j4hdDDcfYzaqH0fU48lLMxM8ufMP5xKZe5HaLqmMAq3fw==\";\r\n      //const url = \"http://localhost:7071/api/AddResource\";\r\n      fetch(url, {\r\n            method : \"POST\",\r\n            mode: \"no-cors\",\r\n            body:  JSON.stringify({\r\n                \"ResourceID\": uuid(),\r\n                \"ResourceName\": state.resName,\r\n                \"Skills\": state.skills,\r\n                \"Billing\": parseInt(state.billing) || 0,\r\n                \"ProjectID\": state.projectId,\r\n                \"ResourceProjStartDate\" : state.resourceprojectstartdate,\r\n                \"ResourceLocation\" : state.resourcelocation\r\n            })\r\n        })\r\n        .then(response => {\r\n            setState({indicatorText: \"Added new Resource\"});\r\n        }).catch(err => {setState({indicatorText: \"Ran into an error while adding Resource\" + err})});\r\n    }\r\n\r\n\t\treturn (\r\n            <form onSubmit={onSubmit} >\r\n            <React.Fragment>\r\n            <div>\r\n                <h1> Add Resource</h1>\r\n                <h3> Enter the details of the project below</h3>\r\n\r\n                <TextField className=\"field\" label=\"Name\" name=\"resName\" value={state.resName} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Skills\" name=\"skills\" value={state.skills} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Billing (/hr)\" name=\"billing\" value={state.billing} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Project ID\" name=\"projectId\" value={state.projectId} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Resource ID\" name=\"resourceId\" value={state.ResourceID} onChange={setProperty}/>\r\n                <TextField className=\"field\" label=\"Resource Location\" name=\"resourcelocation\" value={state.resourcelocation} onChange={setProperty}/>\r\n                <DatePicker className=\"field\" label=\"Project Start Date\" placeholder=\"Select a date...\" name=\"resourceprojectstartdate\" value={state.resourceprojectstartdate} onSelectDate={setStartDate} ariaLabel=\"Select a date\"/>\r\n                \r\n                <PrimaryButton className=\"Add\" text=\"Add\" onClick={onSubmit} allowDisabledFocus />\r\n\r\n                <br/>\r\n                <label className=\"Indicator\">{state.indicatorText}</label>\r\n            \r\n            </div>\r\n            </React.Fragment>\r\n            </form>\r\n            \r\n        );\r\n} \r\n\r\nexport default AddResource; \r\n","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\Search.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, {useState} from 'react';\r\nimport './Search.css';\r\nimport { If, Else, Elif } from 'rc-if-else';\r\nimport { Label, Link, PrimaryButton, List } from 'office-ui-fabric-react';\r\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n//const holidays = [new Date(2021,1,19), new Date(2021,4,28)];\r\nvar listofholidays = []\r\nfunction Search(){\r\n\r\n    const [projlist, setProjlist] = useState([]);\r\n    const [resourceDetails, setResourceDetails ] = useState([]);\r\n    const [billingDetails, setBillingDetails] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const searchBoxStyles = { root: { width: 200 } };\r\n    const [state, setState] = useState({\r\n        searchString: \"\",\r\n        projectID: \"\",\r\n        projectName : \"\",\r\n        description : \"\",\r\n        startDate : new Date(),\r\n        endDate : new Date(),\r\n        projListVisible: false,\r\n        projDetailsVisible: false,\r\n        resources: [],\r\n        projNotFound: false,\r\n        shouldShowProjections: false,\r\n        totalBill: 0,\r\n        poStatus:\"active\",\r\n        poValue: \"\",\r\n        poNum: \"\",\r\n        origPoNum: \"\",\r\n        poType: \"sow\",\r\n        projType: \"t&m\",\r\n        salesSegment: \"\",\r\n        cluster: \"\",\r\n        clientPartner: \"\",\r\n        accountManager: \"\",\r\n        cdmName: \"\"\r\n      });\r\n\r\n    function UpdateItems()\r\n    {\r\n        setItems( [\r\n            {\r\n                \"Field\": \"PO Number\",\r\n                \"Value\": state.poNum\r\n            },\r\n            {\r\n                \"Field\": \"Name\",\r\n                \"Value\": state.projectName\r\n            }, {\r\n                \"Field\": \"Description\",\r\n                \"Value\": state.description\r\n            }, {\r\n                \"Field\": \"Start Date\",\r\n                \"Value\": state.startDate.toString()\r\n            }, {\r\n                \"Field\": \"End Date\",\r\n                \"Value\": state.endDate.toString()\r\n            }, {\r\n                \"Field\": \"Original PO Number\",\r\n                \"Value\": state.origPoNum\r\n            }, {\r\n                \"Field\": \"PO Current Status\",\r\n                \"Value\": state.poStatus\r\n            }, {\r\n                \"Field\": \"PO Value\",\r\n                \"Value\": state.poValue\r\n            }, {\r\n                \"Field\": \"PO Type\",\r\n                \"Value\": state.poType\r\n            }, {\r\n                \"Field\": \"Project Type\",\r\n                \"Value\": state.projType\r\n            }, {\r\n                \"Field\": \"sSales Segment\",\r\n                \"Value\": state.salesSegment\r\n            }, {\r\n                \"Field\": \"Cluster \",\r\n                \"Value\": state.cluster\r\n            }, {\r\n                \"Field\": \"Client Partner(L1)\",\r\n                \"Value\": state.clientPartner\r\n            }, {\r\n                \"Field\": \"Account Manager(L2)\",\r\n                \"Value\": state.accountManager\r\n            }, {\r\n                \"Field\": \"CDM Name\",\r\n                \"Value\": state.cdmName\r\n            }\r\n        ]);\r\n        var resDetails = [];\r\n        state.resources.map(res =>{\r\n            resDetails.push(\r\n                {\r\n                    \"ResourceName\": res.resourceName,\r\n                    \"Billing (/day)\": res.billing,\r\n                }\r\n            )   \r\n        } ) \r\n        setResourceDetails(resDetails) ;\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        UpdateItems();\r\n      }, [state]);\r\n\r\n    function setCurrentProject(e) {\r\n        var project = projlist[e.target.name]\r\n        setState(prevstate =>\r\n            {return{...prevstate,\r\n              shouldShowProjections: false,\r\n              projectName: project.projectName,\r\n              startDate: new Date(Date.parse(project.startDate)),\r\n              endDate: new Date(Date.parse(project.endDate)),\r\n              description: project.description,\r\n              resources: project.resources,\r\n              poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n              poValue: project.poValue,\r\n              poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n              projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n              poNum: project.poNumber,\r\n              origPoNum: project.orginalPoNumber,\r\n              salesSegment: project.salesSegment,\r\n              cluster: project.cluster,\r\n              clientPartner: project.clientPartner,\r\n              accountManager: project.accountManager,\r\n              cdmName: project.cdmName,\r\n              projDetailsVisible: true\r\n            }\r\n            }\r\n        );\r\n    }\r\n\r\n    function onSubmit(searchString) {\r\n        //e.preventDefault();\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/Search?code=CbTDUtF5NSctIKh/jP6BmrifZ17wiSyQvqc0COv0G1ybdouglcICWw==&ProjectName=\"+searchString;\r\n        //const url = \"http://localhost:7071/api/Search?ProjectName=\"+searchString;\r\n        \r\n\r\n        fetch(url, {\r\n              method : \"GET\",\r\n            }).then(response => response.json()\r\n            ).then(projects => {\r\n                console.log(projects)\r\n                if(projects.length != 0)\r\n                {\r\n                    setProjlist(projects)\r\n                \r\n               /* if(project.poNumber != 0)\r\n                {\r\n\r\n                setState(prevstate =>\r\n                    {return{...prevstate,\r\n                      shouldShowProjections: false,\r\n                      projectName: project.projectName,\r\n                      startDate: new Date(Date.parse(project.startDate)),\r\n                      endDate: new Date(Date.parse(project.endDate)),\r\n                      description: project.description,\r\n                      resources: project.resources,\r\n                      poStatus: project.poStatus == 0 ? \"Active\" : \"Inactive\",\r\n                      poValue: project.poValue,\r\n                      poType: project.poType == 0 ? \"SOW\" : \"Beeline\",\r\n                      projType: project.projectType == 0 ? \"T&M\" : \"Fixed Price\",\r\n                      poNum: project.poNumber,\r\n                      origPoNum: project.orginalPoNumber,\r\n                      salesSegment: project.salesSegment,\r\n                      cluster: project.cluster,\r\n                      clientPartner: project.clientPartner,\r\n                      accountManager: project.accountManager,\r\n                      cdmName: project.cdmName\r\n                    }\r\n                    }\r\n                );*/\r\n                setState(prevState =>\r\n                    {return {...prevState, \r\n                        projListVisible: true,  \r\n                      projNotFound: false,\r\n                    }})\r\n                }\r\n                else{\r\n                    setState(prevstate =>\r\n                        {return{...prevstate,\r\n                            projNotFound: true,\r\n                            projListVisible: false,\r\n                            projDetailsVisible: false,\r\n                            shouldShowProjections: false}\r\n                        })\r\n                }\r\n\r\n            }).catch(err => {alert(err)});\r\n      }\r\n      \r\n     function computeWorkingDaysBetweenTwoDays(startDate, endDate) {\r\n      \r\n      // Validate input\r\n        if (endDate < startDate) {\r\n          return 0;\r\n        }\r\n      \r\n      // Calculate days between dates\r\n        var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\r\n        startDate.setHours(0, 0, 0, 1);  // Start just after midnight\r\n        endDate.setHours(23, 59, 59, 999);  // End just before midnight\r\n        var diff = endDate - startDate;  // Milliseconds between datetime objects    \r\n        var days = Math.ceil(diff / millisecondsPerDay);\r\n      \r\n        // Subtract two weekend days for every week in between\r\n        var weeks = Math.floor(days / 7);\r\n        days -= weeks * 2;\r\n      \r\n        // Handle special cases\r\n        var startDay = startDate.getDay();\r\n        var endDay = endDate.getDay();\r\n          \r\n        // Remove weekend not previously removed.   \r\n        if (startDay - endDay > 1) {\r\n          days -= 2;\r\n        }\r\n        // Remove start day if span starts on Sunday but ends before Saturday\r\n        if (startDay == 0 && endDay != 6) {\r\n          days--;  \r\n        }\r\n        // Remove end day if span ends on Saturday but starts after Sunday\r\n        if (endDay == 6 && startDay != 0) {\r\n          days--;\r\n        }\r\n\r\n        /* Here is the code */\r\n        listofholidays.forEach(day => {\r\n            //console.log(day + \" -- \" + startDate + \" -- \" + endDate)\r\n          if ((day >= startDate) && (day <= endDate)) {\r\n              days--;\r\n          }\r\n        });\r\n        return days;\r\n     }\r\n\r\n      function showProjections() {\r\n          \r\n        //const url = \"http://localhost:7071/api/search\";\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\"\r\n        fetch(url, {\r\n            method : \"GET\"\r\n          }).then(response => response.json()\r\n          ).then(holidays => {\r\n              console.log(holidays);\r\n              holidays.map(holiday =>  \r\n                {\r\n                    listofholidays.push(new Date(Date.parse(holiday.holidayDate)))\r\n                });\r\n              console.log(listofholidays)\r\n\r\n              var total = 0;\r\n              var billDetails = [];\r\n              var billMap = new Map();\r\n\r\n              state.resources.map(res => {\r\n\r\n                var billing = res.billing\r\n                 // var a = new Date(res.resourceProjStartDate);\r\n                  //var b = state.endDate;\r\n                  var start = new Date(res.resourceProjStartDate);\r\n                  var end = new Date(start.getFullYear(), start.getMonth() + 1, 0);\r\n                  console.log(start + \" - \" + end + \" - \" + billing)\r\n                  end = (end > state.endDate) ? state.endDate : end;\r\n                  var year = start.getFullYear();\r\n                  while (end >= start) {\r\n                      var diffDays = computeWorkingDaysBetweenTwoDays(start, end);\r\n                      total += billing * diffDays;\r\n\r\n                      var key = monthNames[start.getMonth()] + \" \" + start.getFullYear();\r\n                      console.log(key + \"-\" + billMap.get(key));\r\n                      if(!billMap.has(key))\r\n                      {\r\n                        billMap.set(key, 0);\r\n                      }\r\n                      billMap.set(key, billMap.get(key) + (billing * diffDays));\r\n                      \r\n\r\n                      var month = start.getMonth() == 11 ? -1 : start.getMonth();\r\n                      year = start.getMonth() == 11 ? year + 1 : year;\r\n                      start = new Date(year, month + 1, 1);\r\n                      end = new Date(year, start.getMonth() + 1, 0);\r\n                      end = (end >= state.endDate) ? state.endDate : end;\r\n                      console.log(start + \" - \" + end + \" - \" + billing)\r\n                  }\r\n              })\r\n\r\n      \r\n             setState(prevstate => {\r\n                  return{...prevstate,totalBill : total,\r\n                      shouldShowProjections: true,}\r\n                  \r\n              })\r\n              \r\n              for (const [key, value] of billMap) {\r\n                billDetails.push(\r\n                    {\r\n                        \"Month\": key,\r\n                        \"Monthly Bill\": \"$\" + value\r\n                    },\r\n                )\r\n                console.log(`${key}: ${value}`);\r\n              }\r\n\r\n             \r\n            //   billMap.map(monthlyBill => {\r\n            //       billDetails.push(\r\n            //           {\r\n            //               \"Month\": monthlyBill,\r\n            //               \"Monthly Bill\": \"$\" + (billing * diffDays)\r\n            //           },\r\n            //       )\r\n            //   })\r\n\r\n              setBillingDetails(billDetails);\r\n          });\r\n\r\n      }\r\n\r\n        return(\r\n            <div className=\"SearchSection\">\r\n                <Label>Search for the Project ID</Label>\r\n                <SearchBox\r\n                    styles={searchBoxStyles}\r\n                    placeholder=\"Enter the Project name\"\r\n                    onSearch={onSubmit}\r\n                />\r\n                \r\n                <If condition={state.projNotFound}>\r\n                    <h3> Project not found! </h3>\r\n                </If>\r\n                \r\n                <If condition={state.projListVisible}>\r\n                <h1 className = \"ProjectsList\"> Projects List </h1>\r\n                {\r\n                    projlist.map((proj , index)=> {\r\n                        console.log(proj.projectName);\r\n                        return <div><Link onClick={setCurrentProject} name= {index}>{proj.projectName} </Link> <br/></div>\r\n                    })\r\n                }\r\n                </If>\r\n\r\n                <If condition={state.projDetailsVisible}>\r\n                {/* <DetailsList\r\n                    items ={projlist}\r\n                    setKey = \"set\"\r\n                    layoutMode={DetailsListLayoutMode.justified}\r\n                    selectionMode={SelectionMode.none}\r\n                /> */}\r\n                <h2 className = \"projdetailheader\"> Project Details </h2>\r\n                    <DetailsList\r\n                        items={items}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selectionMode={SelectionMode.none}\r\n                    /> <br/>\r\n                    <If condition={state.resources.length > 0}>\r\n                    <h3> Resources </h3>\r\n                    <DetailsList\r\n                        items={resourceDetails}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selectionMode={SelectionMode.none}\r\n                    /> \r\n                    </If>\r\n                    <If condition={state.resources.length == 0}>\r\n                    <h3> No resources assigned to the project as of now. </h3>\r\n                    </If>\r\n                    <br/>\r\n                </If>\r\n                <If condition={state.projDetailsVisible && state.resources.length > 0}>\r\n                 <PrimaryButton id=\"Projections\" onClick={showProjections}>Show Projection</PrimaryButton>\r\n                </If>\r\n                <br></br>\r\n                <If condition={state.shouldShowProjections} >\r\n                <DetailsList\r\n                        items={billingDetails}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selectionMode={SelectionMode.none}\r\n                    /> \r\n                    <h3> Total Bill - ${state.totalBill}</h3>\r\n                </If>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Search;","C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\Holidays.js",["87","88","89","90","91","92","93","94"],"import React, {useState, useEffect} from 'react';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { TextField, PrimaryButton, ChoiceGroup, Stack, IStackTokens, DetailsList } from 'office-ui-fabric-react';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings, mergeStyleSets } from 'office-ui-fabric-react';\r\nimport {DetailsListLayoutMode, SelectionMode, Selection, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\nconst Holidays = () => {\r\n    const[state,setState] = useState ({\r\n        HolDate : new Date(),\r\n        Occasion : \"\"\r\n    });\r\n\r\n\r\n    function setHolDate(date){\r\n        setState(prevstate => {\r\n            return {...prevstate, \"HolDate\":  date };\r\n        });\r\n    }\r\n\r\n    function setProperty(e) {\r\n        var name  = e.target.name;\r\n        var val = e.target.value ;\r\n\r\n        console.log(name + \"--\" + val)\r\n                setState(prevstate => {\r\n                    return {...prevstate, [name]: val};\r\n                });\r\n    }\r\n\r\n    const [Holidaysdetails, setHolidaysdetails ] = useState([]);\r\n    //var listofholidays = []\r\n    \r\n    useEffect(() => {\r\n        //getholidayslist();\r\n        });\r\n\r\n    function getholidayslist() {\r\n        const url = \"https://projectionsazurefunctions.azurewebsites.net/api/GetHolidays?code=IGZG4SdEVqbHWYhV32asIb8junLY3IttJDVB4KjCjL3aNGyr0L1rOg==\"\r\n        fetch(url, {\r\n            method: \"GET\"\r\n        }).then(response => response.json()\r\n        ).then(holidays => {\r\n            console.log(holidays);\r\n            /*holidays.map(holiday =>  \r\n              {\r\n                  listofholidays.push(new Date(Date.parse(holiday.holidayDate)))\r\n              });*/\r\n            //console.log(listofholidays)\r\n            setHolidaysdetails(holidays);\r\n        })\r\n    }\r\n    \r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(state.HolDate + \" ---- \"+ state.Occasion);\r\n        //const url = \"https://projectionsazurefunctions.azurewebsites.net/api/AddProject?code=aRwmurbZKy0napFo3BPImB79fgC3Hx5Ejk4FZGPmUuNWbR2bZIbdZg==\";\r\n        const url = \"http://localhost:7071/api/Holidays\";\r\n        fetch(url, {\r\n              method : \"POST\",\r\n              mode: \"no-cors\",\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n                  // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n              body:  JSON.stringify({\r\n                  \r\n                  \"HolidayDate\": state.HolDate,\r\n                  \"Occasion\" : state.Occasion,\r\n                  \r\n              })\r\n          }).then(response => {\r\n              setState({indicatorText: \"Added Holidays\"});\r\n              getholidayslist();\r\n          }).catch(err => {setState({indicatorText: \"Ran into an error while adding project \" + err})});\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={onSubmit} >\r\n        <React.Fragment>\r\n        <Label className=\"Label\"> Enter Holidays</Label>\r\n        \r\n        <DatePicker className=\"field\" label=\"Pick Holidays\" placeholder=\"Select a date...\" name=\"HolDate\" value={state.HolDate} onSelectDate={setHolDate} ariaLabel=\"Select a date\"/>\r\n        <TextField className=\"field\" label=\"Name of Occasion\" name=\"Occasion\" value={state.Occasion} onChange={setProperty}/>\r\n        <DetailsList \r\n                        items={Holidaysdetails}\r\n                        setKey=\"set\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selectionMode={SelectionMode.none}\r\n        /> \r\n        <PrimaryButton className=\"Add\" text=\"Add Holidays\" onClick={onSubmit} allowDisabledFocus />\r\n        </React.Fragment>\r\n            </form>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Holidays;","C:\\SravsGithub\\sravsrepo\\projections\\src\\Config.js",[],"C:\\SravsGithub\\sravsrepo\\projections\\src\\AuthProvider.js",[],"C:\\SravsGithub\\sravsrepo\\projections\\src\\Components\\Projects.js",["95","96","97","98","99","100","101","102","103","104","105"],{"ruleId":"106","severity":1,"message":"107","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"106","severity":1,"message":"114","line":1,"column":26,"nodeType":"108","messageId":"109","endLine":1,"endColumn":35},{"ruleId":"106","severity":1,"message":"115","line":5,"column":49,"nodeType":"108","messageId":"109","endLine":5,"endColumn":54},{"ruleId":"106","severity":1,"message":"116","line":5,"column":56,"nodeType":"108","messageId":"109","endLine":5,"endColumn":68},{"ruleId":"106","severity":1,"message":"117","line":6,"column":22,"nodeType":"108","messageId":"109","endLine":6,"endColumn":31},{"ruleId":"106","severity":1,"message":"118","line":6,"column":33,"nodeType":"108","messageId":"109","endLine":6,"endColumn":51},{"ruleId":"106","severity":1,"message":"119","line":6,"column":53,"nodeType":"108","messageId":"109","endLine":6,"endColumn":67},{"ruleId":"106","severity":1,"message":"120","line":28,"column":33,"nodeType":"108","messageId":"109","endLine":28,"endColumn":51},{"ruleId":"106","severity":1,"message":"121","line":33,"column":27,"nodeType":"108","messageId":"109","endLine":33,"endColumn":37},{"ruleId":"106","severity":1,"message":"122","line":38,"column":29,"nodeType":"108","messageId":"109","endLine":38,"endColumn":41},{"ruleId":"123","severity":1,"message":"124","line":92,"column":50,"nodeType":"125","messageId":"126","endLine":92,"endColumn":52},{"ruleId":"123","severity":1,"message":"124","line":96,"column":46,"nodeType":"125","messageId":"126","endLine":96,"endColumn":48},{"ruleId":"123","severity":1,"message":"124","line":97,"column":53,"nodeType":"125","messageId":"126","endLine":97,"endColumn":55},{"ruleId":"106","severity":1,"message":"115","line":3,"column":47,"nodeType":"108","messageId":"109","endLine":3,"endColumn":52},{"ruleId":"106","severity":1,"message":"116","line":3,"column":54,"nodeType":"108","messageId":"109","endLine":3,"endColumn":66},{"ruleId":"106","severity":1,"message":"127","line":3,"column":14,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"128","line":3,"column":20,"nodeType":"108","messageId":"109","endLine":3,"endColumn":24},{"ruleId":"106","severity":1,"message":"129","line":4,"column":38,"nodeType":"108","messageId":"109","endLine":4,"endColumn":42},{"ruleId":"106","severity":1,"message":"130","line":5,"column":21,"nodeType":"108","messageId":"109","endLine":5,"endColumn":37},{"ruleId":"106","severity":1,"message":"131","line":6,"column":61,"nodeType":"108","messageId":"109","endLine":6,"endColumn":70},{"ruleId":"106","severity":1,"message":"132","line":6,"column":72,"nodeType":"108","messageId":"109","endLine":6,"endColumn":79},{"ruleId":"106","severity":1,"message":"133","line":12,"column":7,"nodeType":"108","messageId":"109","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":100,"column":33,"nodeType":"136","messageId":"137","endLine":100,"endColumn":35},{"ruleId":"138","severity":1,"message":"139","line":113,"column":10,"nodeType":"140","endLine":113,"endColumn":17,"suggestions":"141"},{"ruleId":"123","severity":1,"message":"124","line":125,"column":42,"nodeType":"125","messageId":"126","endLine":125,"endColumn":44},{"ruleId":"123","severity":1,"message":"124","line":127,"column":38,"nodeType":"125","messageId":"126","endLine":127,"endColumn":40},{"ruleId":"123","severity":1,"message":"124","line":128,"column":45,"nodeType":"125","messageId":"126","endLine":128,"endColumn":47},{"ruleId":"123","severity":1,"message":"142","line":153,"column":36,"nodeType":"125","messageId":"126","endLine":153,"endColumn":38},{"ruleId":"123","severity":1,"message":"124","line":228,"column":22,"nodeType":"125","messageId":"126","endLine":228,"endColumn":24},{"ruleId":"123","severity":1,"message":"142","line":228,"column":37,"nodeType":"125","messageId":"126","endLine":228,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":232,"column":20,"nodeType":"125","messageId":"126","endLine":232,"endColumn":22},{"ruleId":"123","severity":1,"message":"142","line":232,"column":37,"nodeType":"125","messageId":"126","endLine":232,"endColumn":39},{"ruleId":"134","severity":1,"message":"135","line":255,"column":36,"nodeType":"136","messageId":"137","endLine":255,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":265,"column":39,"nodeType":"136","messageId":"137","endLine":265,"endColumn":41},{"ruleId":"123","severity":1,"message":"124","line":288,"column":52,"nodeType":"125","messageId":"126","endLine":288,"endColumn":54},{"ruleId":"123","severity":1,"message":"124","line":289,"column":47,"nodeType":"125","messageId":"126","endLine":289,"endColumn":49},{"ruleId":"123","severity":1,"message":"124","line":375,"column":59,"nodeType":"125","messageId":"126","endLine":375,"endColumn":61},{"ruleId":"106","severity":1,"message":"143","line":3,"column":36,"nodeType":"108","messageId":"109","endLine":3,"endColumn":47},{"ruleId":"106","severity":1,"message":"115","line":3,"column":49,"nodeType":"108","messageId":"109","endLine":3,"endColumn":54},{"ruleId":"106","severity":1,"message":"116","line":3,"column":56,"nodeType":"108","messageId":"109","endLine":3,"endColumn":68},{"ruleId":"106","severity":1,"message":"117","line":4,"column":22,"nodeType":"108","messageId":"109","endLine":4,"endColumn":31},{"ruleId":"106","severity":1,"message":"118","line":4,"column":33,"nodeType":"108","messageId":"109","endLine":4,"endColumn":51},{"ruleId":"106","severity":1,"message":"119","line":4,"column":53,"nodeType":"108","messageId":"109","endLine":4,"endColumn":67},{"ruleId":"106","severity":1,"message":"131","line":5,"column":47,"nodeType":"108","messageId":"109","endLine":5,"endColumn":56},{"ruleId":"106","severity":1,"message":"132","line":5,"column":58,"nodeType":"108","messageId":"109","endLine":5,"endColumn":65},{"ruleId":"106","severity":1,"message":"127","line":2,"column":14,"nodeType":"108","messageId":"109","endLine":2,"endColumn":18},{"ruleId":"106","severity":1,"message":"128","line":2,"column":20,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"144","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":15},{"ruleId":"106","severity":1,"message":"145","line":3,"column":23,"nodeType":"108","messageId":"109","endLine":3,"endColumn":36},{"ruleId":"106","severity":1,"message":"129","line":3,"column":38,"nodeType":"108","messageId":"109","endLine":3,"endColumn":42},{"ruleId":"106","severity":1,"message":"131","line":4,"column":61,"nodeType":"108","messageId":"109","endLine":4,"endColumn":70},{"ruleId":"106","severity":1,"message":"132","line":4,"column":72,"nodeType":"108","messageId":"109","endLine":4,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":47,"column":44,"nodeType":"125","messageId":"126","endLine":47,"endColumn":46},{"ruleId":"123","severity":1,"message":"124","line":49,"column":40,"nodeType":"125","messageId":"126","endLine":49,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":50,"column":47,"nodeType":"125","messageId":"126","endLine":50,"endColumn":49},{"ruleId":"138","severity":1,"message":"139","line":119,"column":8,"nodeType":"140","endLine":119,"endColumn":15,"suggestions":"146"},"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'useEffect' is defined but never used.","'Stack' is defined but never used.","'IStackTokens' is defined but never used.","'DayOfWeek' is defined but never used.","'IDatePickerStrings' is defined but never used.","'mergeStyleSets' is defined but never used.","'setPoStatusOptions' is assigned a value but never used.","'setPOTypes' is assigned a value but never used.","'setProjTypes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Else' is defined but never used.","'Elif' is defined but never used.","'List' is defined but never used.","'ISearchBoxStyles' is defined but never used.","'Selection' is defined but never used.","'IColumn' is defined but never used.","'_MS_PER_DAY' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'UpdateItems'. Either include it or remove the dependency array.","ArrayExpression",["149"],"Expected '!==' and instead saw '!='.","'ChoiceGroup' is defined but never used.","'Label' is defined but never used.","'PrimaryButton' is defined but never used.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},"Update the dependencies array to be: [UpdateItems, state]",{"range":"154","text":"155"},{"range":"156","text":"155"},[3693,3700],"[UpdateItems, state]",[3940,3947]]